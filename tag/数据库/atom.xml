<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://iyiyiyiyi.github.io</id>
    <title>ClaRn&#39;S BLOG • Posts by &#34;数据库&#34; tag</title>
    <link href="https://iyiyiyiyi.github.io" />
    <updated>2022-04-08T14:18:27.000Z</updated>
    <category term="Android" />
    <category term="压缩算法" />
    <category term="作业" />
    <category term="模式识别" />
    <category term="机器学习" />
    <category term="生物信息学" />
    <category term="算法" />
    <category term="动态规划" />
    <category term="数据库" />
    <category term="Review" />
    <category term="图像处理" />
    <category term="OpenCV" />
    <category term="操作系统" />
    <category term="编译原理" />
    <category term="软件工程" />
    <category term="数据结构" />
    <category term="人工智能" />
    <entry>
        <id>https://iyiyiyiyi.github.io/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F.html</id>
        <title>数据库系统</title>
        <link rel="alternate" href="https://iyiyiyiyi.github.io/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F.html"/>
        <content type="html">&lt;h1 id=&#34;数据库数据仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库数据仓库&#34;&gt;&lt;/a&gt; 数据库（数据仓库）&lt;/h1&gt;
&lt;p&gt;数据库是&lt;code&gt;长期储存&lt;/code&gt;在计算机内、有组织的、可共享的大量数据的集合&lt;/p&gt;
&lt;p&gt;数据库中的数据按照一定的数据模型组织、描述、存储。具有较小冗余度、较高数据独立性和易扩展性，并且可以为各种用户共享。&lt;/p&gt;
&lt;p&gt;数据库的基本特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;永久存储&lt;/li&gt;
&lt;li&gt;有组织&lt;/li&gt;
&lt;li&gt;可共享&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数据库管理系统&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库管理系统&#34;&gt;&lt;/a&gt; 数据库管理系统&lt;/h2&gt;
&lt;p&gt;用户通过数据库管理系统操作数据库，数据库管理系统将操作系统的接口封装，为用户提供数据的定义、组织、存储、管理、操纵、数据库的事务管理和运行、数据库的建立和维护等工作。&lt;/p&gt;
&lt;h2 id=&#34;数据库系统&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库系统&#34;&gt;&lt;/a&gt; 数据库系统&lt;/h2&gt;
&lt;p&gt;数据库系统内包含数据库、数据库管理系统、应用程序和数据库管理员。&lt;/p&gt;
&lt;p&gt;数据库系统是用于存储、管理、处理和维护数据的系统&lt;/p&gt;
&lt;p&gt;&lt;code&gt;数据库系统与文件系统的区别：数据的结构化&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;数据模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据模型&#34;&gt;&lt;/a&gt; 数据模型&lt;/h2&gt;
&lt;p&gt;概念模型：对数据和信息的建模&lt;br /&gt;
逻辑模型：数据之间的逻辑结构组成的模型&lt;br /&gt;
物理模型：物理机上存储的模型&lt;/p&gt;
&lt;h3 id=&#34;definitions&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#definitions&#34;&gt;&lt;/a&gt; Definitions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;实体(Entity)：客观存在并可以互相区别的事务&lt;/li&gt;
&lt;li&gt;属性(Attribute)：实体的某一特性&lt;/li&gt;
&lt;li&gt;码(Key)：唯一标识实体的属性集&lt;/li&gt;
&lt;li&gt;实体型(Entity Set)：同一类型实体的集合&lt;/li&gt;
&lt;li&gt;联系(Relationship)：实体之间的联系，通常指不同&lt;code&gt;实体集&lt;/code&gt;之间的联系&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;e-r图&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#e-r图&#34;&gt;&lt;/a&gt; E-R图&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/gallery/ER-example.jpeg&#34; alt=&#34;E-R Example&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;范式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#范式&#34;&gt;&lt;/a&gt; 范式&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;第一范式(确保每列保持原子性)
&lt;ul&gt;
&lt;li&gt;第一范式是最基本的范式。如果数据库表中的所有字段值都是不可分解的原子值，就说明该数据库表满足了第一范式。&lt;/li&gt;
&lt;li&gt;第一范式的合理遵循需要根据系统的实际需求来定。&lt;/li&gt;
&lt;li&gt;比如某些数据库系统中需要用到“地址”这个属性，本来直接将“地址”属性设计成一个数据库表的字段就行。但是如果系统经常会访问“地址”属性中的“城市”部分，那么就非要将“地址”这个属性重新拆分为省份、城市、详细地址等多个部分进行存储，这样在对地址中某一部分操作的时候将非常方便。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第二范式(确保表中的每列都和主键相关)
&lt;ul&gt;
&lt;li&gt;第二范式在第一范式的基础之上更进一层。第二范式需要确保数据库表中的每一列都和主键相关，而不能只与主键的某一部分相关（主要针对联合主键而言）。也就是说在一个数据库表中，一个表中只能保存一种数据，不可以把多种数据保存在同一张数据库表中。&lt;/li&gt;
&lt;li&gt;比如要设计一个订单信息表，因为订单中可能会有多种商品，所以要将订单编号和商品编号作为数据库表的联合主键。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第三范式(确保每列都和主键列直接相关,而不是间接相关)
&lt;ul&gt;
&lt;li&gt;第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关。&lt;/li&gt;
&lt;li&gt;比如在设计一个订单数据表的时候，可以将客户编号作为一个外键和订单表建立相应的关系。而不可以在订单表中添加关于客户其它信息（比如姓名、所属公司等）的字段。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;sql语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql语句&#34;&gt;&lt;/a&gt; SQL语句&lt;/h2&gt;
&lt;h3 id=&#34;索引&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#索引&#34;&gt;&lt;/a&gt; 索引&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;hash索引：O(1)操作，适合单值查询，如 &lt;em&gt;=、in&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;btree索引：适合单值查询和范围查询，如 &lt;em&gt;&amp;lt;、&amp;gt;、between&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;union操作符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#union操作符&#34;&gt;&lt;/a&gt; &lt;code&gt;UNION&lt;/code&gt;操作符&lt;/h3&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; column_name &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; table1
&lt;span class=&#34;hljs-keyword&#34;&gt;UNION&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; column_name &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; table2;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;UNION&lt;/code&gt;操作符的作用是合并两个或者多个&lt;code&gt;SELECT&lt;/code&gt;语句的查询结果。&lt;br /&gt;
&lt;code&gt;UNION&lt;/code&gt;操作默认选取不同的值。如果需要允许重复的值，需要使用&lt;code&gt;UNION ALL&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; column_name &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; table1
&lt;span class=&#34;hljs-keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;ALL&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; column_name &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; table2;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;select-into语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#select-into语句&#34;&gt;&lt;/a&gt; &lt;code&gt;SELECT INTO&lt;/code&gt;语句&lt;/h3&gt;
&lt;p&gt;MySQL不支持该语句，但可以用&lt;code&gt;INSERT INTO ... SELECT ...&lt;/code&gt;代替。&lt;br /&gt;
下面语句将table1所有的列复制进newtable&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; newtable &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; table1;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或者也可以将table1中的指定列复制进newtable&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; comun_name &lt;span class=&#34;hljs-keyword&#34;&gt;INTO&lt;/span&gt; newtable &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; table1;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;in操作符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#in操作符&#34;&gt;&lt;/a&gt; &lt;code&gt;IN&lt;/code&gt;操作符&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;IN&lt;/code&gt;操作符可以让&lt;code&gt;WHERE&lt;/code&gt;在多个值中选择。&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; column_name1,column_name2,... 
&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; table1 
&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;column&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt; (value1, value2, ...);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;between操作符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#between操作符&#34;&gt;&lt;/a&gt; &lt;code&gt;BETWEEN&lt;/code&gt;操作符&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;BETWEEN&lt;/code&gt;操作符可以选取介于两个值之间的数据范围内的值。&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; column_name1, column_name2, ... 
&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; table1 
&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;column&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BETWEEN&lt;/span&gt; value1 &lt;span class=&#34;hljs-keyword&#34;&gt;AND&lt;/span&gt; value2;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;value的值可以是数字、字符或者日期。&lt;br /&gt;
在MySQL中，&lt;code&gt;BETWEEN&lt;/code&gt;操作符的选择会包括&lt;em&gt;value1&lt;/em&gt;和&lt;em&gt;value2&lt;/em&gt;。&lt;/p&gt;
&lt;h3 id=&#34;order-by关键字&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#order-by关键字&#34;&gt;&lt;/a&gt; &lt;code&gt;ORDER BY&lt;/code&gt;关键字&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ORDER BY&lt;/code&gt;关键字用于对结果集合进行排序，排序结果可以是升序或者降序。&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; column_name1, column_name2, ...
&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; table1
&lt;span class=&#34;hljs-keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;BY&lt;/span&gt; column_name1, column_name2, ... &lt;span class=&#34;hljs-keyword&#34;&gt;ASC&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;升序操作为&lt;code&gt;ASC&lt;/code&gt;，是默认的；降序操作为&lt;code&gt;DESC&lt;/code&gt;。&lt;br /&gt;
当有多个关键字需要排序时，将会按照语句中给出的顺序作为优先级进行排序。&lt;/p&gt;
&lt;h3 id=&#34;join连接符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#join连接符&#34;&gt;&lt;/a&gt; &lt;code&gt;JOIN&lt;/code&gt;连接符&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;JOIN&lt;/code&gt;连接符用于将两个或是多个表的行结合起来。包括&lt;code&gt;LEFT JOIN, RIGHT JOIN, INNER JOIN, OUTER JOIN&lt;/code&gt;。&lt;br /&gt;
&lt;img src=&#34;//gallery//sql-join.png&#34; alt=&#34;SQL JOINS&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;INNER JOIN：如果表中有至少一个匹配，则返回行&lt;/li&gt;
&lt;li&gt;LEFT JOIN：即使右表中没有匹配，也从左表返回所有的行&lt;/li&gt;
&lt;li&gt;RIGHT JOIN：即使左表中没有匹配，也从右表返回所有的行&lt;/li&gt;
&lt;li&gt;FULL JOIN：只要其中一个表中存在匹配，则返回行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;check约束&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#check约束&#34;&gt;&lt;/a&gt; &lt;code&gt;CHECK&lt;/code&gt;约束&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;CHECK&lt;/code&gt;约束用于限制列中的值得范围。&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; Persons
(
   P_Id &lt;span class=&#34;hljs-built_in&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;,
   LastName &lt;span class=&#34;hljs-built_in&#34;&gt;varchar&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;) &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;,
   FirstName &lt;span class=&#34;hljs-built_in&#34;&gt;varchar&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;),
   Address &lt;span class=&#34;hljs-built_in&#34;&gt;varchar&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;),
   City &lt;span class=&#34;hljs-built_in&#34;&gt;varchar&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;),
   &lt;span class=&#34;hljs-keyword&#34;&gt;CHECK&lt;/span&gt; (P_Id&amp;gt;&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;)
);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或者在&lt;code&gt;ALTER TABLE&lt;/code&gt;语句中&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; Persons
&lt;span class=&#34;hljs-keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;CHECK&lt;/span&gt; (P_Id&amp;gt;&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;create-index语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#create-index语句&#34;&gt;&lt;/a&gt; &lt;code&gt;CREATE INDEX&lt;/code&gt;语句&lt;/h3&gt;
&lt;p&gt;该语句可用于在表中创建索引。在不读取整个表的情况下，索引可以加快数据库查找数据的速度。&lt;/p&gt;
&lt;p&gt;可以使用下列语句创建一个索引&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INDEX&lt;/span&gt; index_name
&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; table_name (column_name, ...);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一个索引可以不只联系一个列，可以将多个列共同索引。&lt;/p&gt;
&lt;p&gt;可以使用下列语句创建一个唯一索引&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;UNIQUE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;INDEX&lt;/span&gt; index_name
&lt;span class=&#34;hljs-keyword&#34;&gt;ON&lt;/span&gt; table_name (column_name, ...);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;唯一索引不允许有两个相同值的行存在。&lt;/p&gt;
&lt;h3 id=&#34;like操作符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#like操作符&#34;&gt;&lt;/a&gt; &lt;code&gt;LIKE&lt;/code&gt;操作符&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;LIKE&lt;/code&gt;操作符用于在&lt;code&gt;WHERE&lt;/code&gt;子句中搜索列中的指定模式，使用&lt;code&gt;%&lt;/code&gt;作为字符通配符，例如&lt;code&gt;%Y&lt;/code&gt;将会匹配所有以&lt;code&gt;Y&lt;/code&gt;结尾的字符串。&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; column_name, column_name1, ... 
&lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; table_name
&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; column_name &lt;span class=&#34;hljs-keyword&#34;&gt;LIKE&lt;/span&gt; pattern;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;通常情况下，pattern中的通配符有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%&lt;/code&gt;：替代0个或多个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_&lt;/code&gt;：替代一个字符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是若要匹配正则表达式，则可以使用如下语句&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;SELECT&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;FROM&lt;/span&gt; Websites
&lt;span class=&#34;hljs-keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;name&lt;/span&gt; REGEXP &lt;span class=&#34;hljs-string&#34;&gt;&#39;^[GFs]&#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上述语句将匹配所有以G、F、s开头的列。&lt;/p&gt;
&lt;h3 id=&#34;auto_increment&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#auto_increment&#34;&gt;&lt;/a&gt; &lt;code&gt;AUTO_INCREMENT&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;在MySQL中，创建表时添加&lt;code&gt;AUTO_INCREMENT&lt;/code&gt;字段可以让属性自增。&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; Persons
(
   &lt;span class=&#34;hljs-keyword&#34;&gt;ID&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,
   LastName &lt;span class=&#34;hljs-built_in&#34;&gt;varchar&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;) &lt;span class=&#34;hljs-keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;,
   FirstName &lt;span class=&#34;hljs-built_in&#34;&gt;varchar&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;),
   Address &lt;span class=&#34;hljs-built_in&#34;&gt;varchar&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;),
   City &lt;span class=&#34;hljs-built_in&#34;&gt;varchar&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;255&lt;/span&gt;),
   PRIMARY &lt;span class=&#34;hljs-keyword&#34;&gt;KEY&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;ID&lt;/span&gt;)
);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;默认地，AUTO_INCREMENT 的开始值是 1，每条新记录递增 1。&lt;/p&gt;
&lt;p&gt;要让 AUTO_INCREMENT 序列以其他的值起始，可以使用下面的 SQL 语法：&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; Persons AUTO_INCREMENT=&lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;alter-table&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#alter-table&#34;&gt;&lt;/a&gt; &lt;code&gt;ALTER TABLE&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;该语句可以用于修改已有的表的列。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在表中添加列&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; table_name
&lt;span class=&#34;hljs-keyword&#34;&gt;ADD&lt;/span&gt; column_name datatype
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;在表中删除列&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; table_name
&lt;span class=&#34;hljs-keyword&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;COLUMN&lt;/span&gt; column_name
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;在表中修改列&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;SQL&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;TABLE&lt;/span&gt; Persons
&lt;span class=&#34;hljs-keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;COLUMN&lt;/span&gt; column_name datatype
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="数据库" />
        <category term="Review" />
        <updated>2022-04-08T14:18:27.000Z</updated>
    </entry>
</feed>
