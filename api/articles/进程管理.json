{"title":"进程管理","uid":"d655af595b90ac0e0949f931f50e7fe8","slug":"进程管理","date":"2022-04-24T12:42:46.000Z","updated":"2023-12-06T14:51:52.158Z","comments":true,"path":"api/articles/进程管理.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/os.jpg","content":"<h2 id=\"进程\"><a href=\"#进程\" class=\"headerlink\" title=\"进程\"></a>进程</h2><h3 id=\"进程的概念和特征\"><a href=\"#进程的概念和特征\" class=\"headerlink\" title=\"进程的概念和特征\"></a>进程的概念和特征</h3><h4 id=\"进程的概念\"><a href=\"#进程的概念\" class=\"headerlink\" title=\"进程的概念\"></a>进程的概念</h4><p>从不同的角度看，进程可以有不同的定义，比较典型的是：</p>\n<ol>\n<li>进程是程序的一次执行过程</li>\n<li>进程是一个程序及其数据在处理机上顺序执行时所发生的活动</li>\n<li>进程是具有独立功能的程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位。</li>\n</ol>\n<h4 id=\"进程的特征\"><a href=\"#进程的特征\" class=\"headerlink\" title=\"进程的特征\"></a>进程的特征</h4><ol>\n<li>动态性：进程是程序的一次执行，它有创建、活动、暂停、终止的过程，具有一定的生命周期。</li>\n<li>并发性：指多个进程实体同时存在于内存中，能在同一段时间内运行。</li>\n<li>独立性：进程实体是一个能独立运行、独立获取资源和独立接受调度的基本单位。</li>\n<li>异步性：由于进程的制约，使得进程的执行具有间断性，即进程按照各自独立、不可预知的速度往前推进。</li>\n<li>结构性：每个进程都配置一个PCB对其进行描述。从结构上看，进程实体是由程序段、数据段和进程控制块构成的。</li>\n</ol>\n<h4 id=\"进程的状态\"><a href=\"#进程的状态\" class=\"headerlink\" title=\"进程的状态\"></a>进程的状态</h4><ol>\n<li>运行态：进程正在处理机上运行</li>\n<li>就绪态：进程获得了除了处理机之外的一切资源，一旦得到处理机就可以立即执行。</li>\n<li>阻塞态：进程因为某一事件而暂停，比如等待输入输出或者某外设资源。</li>\n<li>创建态：进程正在被创建，尚未转到就绪态。</li>\n<li>结束态：进程执行完毕正在从系统中消失。</li>\n</ol>\n<h4 id=\"进程切换过程\"><a href=\"#进程切换过程\" class=\"headerlink\" title=\"进程切换过程\"></a>进程切换过程</h4><ol>\n<li>保存处理机上下文</li>\n<li>更新PCB信息</li>\n<li>把进程的PCB移入相应的队列，如就绪、阻塞队列</li>\n<li>选择另一个进程执行</li>\n<li>更新内存管理的数据结构</li>\n<li>恢复处理机上下文</li>\n</ol>\n<h4 id=\"进程控制块\"><a href=\"#进程控制块\" class=\"headerlink\" title=\"进程控制块\"></a>进程控制块</h4><p>进程控制块用于描述一个进程，其中主要包括描述信息、进程控制和管理信息、资源分配清单和处理机相关信息等。处理机对进程的调度是基于进程控制块实现的。</p>\n<h3 id=\"进程间通信\"><a href=\"#进程间通信\" class=\"headerlink\" title=\"进程间通信\"></a>进程间通信</h3><h4 id=\"共享存储\"><a href=\"#共享存储\" class=\"headerlink\" title=\"共享存储\"></a>共享存储</h4><p>这是最简单的一种进程间通信的方式，它为两个进程提供了一片公共的内存区域，在这个内存区域中的读写对于进程双方都是可见的。低级的共享存储是对数据结构的共享，而高级的共享存储是对存储区的共享。</p>\n<h4 id=\"消息传递\"><a href=\"#消息传递\" class=\"headerlink\" title=\"消息传递\"></a>消息传递</h4><p>进程间的数据交换以格式化的消息为单位。包括直接通信方式和间接通信方式。</p>\n<h5 id=\"直接通信方式\"><a href=\"#直接通信方式\" class=\"headerlink\" title=\"直接通信方式\"></a>直接通信方式</h5><p>发送进程直接将消息发送给接收进程，并且将它挂在接收进程的消息缓冲队列上。接收进程从消息缓冲队列中取得消息。</p>\n<h5 id=\"间接通信方式\"><a href=\"#间接通信方式\" class=\"headerlink\" title=\"间接通信方式\"></a>间接通信方式</h5><p>发送进程把消息发送给某个中间实体，接收进程从中间实体去的消息，一般又称为信箱通信方式。Android的Binder通信机制类似这种。</p>\n<h4 id=\"管道通信\"><a href=\"#管道通信\" class=\"headerlink\" title=\"管道通信\"></a>管道通信</h4><p>管道通信实际上是消息传递的一种特殊方式。管道实际上是指的用于连接读进程和写进程之间的一个共享文件，又叫做pipe文件。由于管道通信是基于文件的，该文件实际充当了一个缓冲区的作用，所以管道通信只能实现半双工通信。  </p>\n<p>从管道中读取数据也是一次性操作，数据在读取之后就会被抛弃。在Linux中一个管道文件被限制在4KB，一旦管道文件已满，IO操作将被阻塞。</p>\n<h3 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h3><p>线程是进程内部的一部分，可以理解为更轻量化的进程。在一个进程内可以拥有多个进程，这些进程拥有自己的专有寄存器和栈空间，但是共享进程内的堆空间。  </p>\n<p>进程是机器分配资源的基本单位，线程是机器分配CPU的基本单位。协程是线程内部的更轻量化的线程，除了拥有专有寄存器外，协程之间还共享栈空间。  </p>\n<p>线程又分为用户级线程和内核级线程；用户级线程依赖应用程序完成线程的调度和管理，内核级线程中的调度和管理都通过操作系统完成。</p>\n<h2 id=\"处理机调度\"><a href=\"#处理机调度\" class=\"headerlink\" title=\"处理机调度\"></a>处理机调度</h2><h3 id=\"调度层次\"><a href=\"#调度层次\" class=\"headerlink\" title=\"调度层次\"></a>调度层次</h3><ol>\n<li>作业调度：又称<code>高级调度</code>，主要任务是按照一定的规则从外存中处于后备状态的作业中挑选一个或多个作业，给它们分配内存、输入输出设备等必要的资源，并简历相应的进程。</li>\n<li>内存调度：又称<code>中级调度</code>，主要任务是提高内存利用率和吞吐率。中级调度将决定将那些陷入阻塞状态的进程暂时调入外存，并在处理机以及资源空闲之后将进程调入内存。</li>\n<li>进程调度：又称<code>低级调度</code>，主要任务是按照某种方法和策略将进程从就绪队列中取出，并分配处理机。</li>\n</ol>\n<h3 id=\"进程调度\"><a href=\"#进程调度\" class=\"headerlink\" title=\"进程调度\"></a>进程调度</h3><p>通常有两种进程调度方式：</p>\n<ul>\n<li>非剥夺调度方式：如果有更重要的任务进入就绪队列，将会持续执行当前任务直到结束或者发生阻塞。</li>\n<li>剥夺调度方式：如果有更重要的任务进入就绪队列，处理机将会被强制剥夺。</li>\n</ul>\n<p>不同的调度算法对于不同方面的特性不同。其中的性能指标是评价调度算法是否适合当前场景的重要参数，常用性能指标有如下几种：</p>\n<ol>\n<li>CPU利用率：好的调度算法应该尽可能让CPU利用率高。</li>\n<li>系统吞吐量：表示单位时间内CPU完成作业的数量。长作业需要消耗较长的处理机时间，因此会降低系统的吞吐量。而对于短作业，它们所需要的处理机时间较短，因此能提高系统的吞吐量。</li>\n<li>周转时间：周转时间是指从作业提交到作业完成所经历的时间，是作业等待、在就绪队列中排队、在处理机上运行以及进行输入输出所花费时间的总和。<br>作业的周转时间可以用如下公式表示：<br> <mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -0.452ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"41.982ex\" height=\"2.149ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 18556 950\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">周</text></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">转</text></g><g data-mml-node=\"mi\" transform=\"translate(2000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(3000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g><g data-mml-node=\"mo\" transform=\"translate(4277.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5333.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">作</text></g><g data-mml-node=\"mi\" transform=\"translate(6333.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">业</text></g><g data-mml-node=\"mi\" transform=\"translate(7333.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">完</text></g><g data-mml-node=\"mi\" transform=\"translate(8333.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">成</text></g><g data-mml-node=\"mi\" transform=\"translate(9333.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(10333.6,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g><g data-mml-node=\"mo\" transform=\"translate(11555.8,0)\"><path data-c=\"2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(12556,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">作</text></g><g data-mml-node=\"mi\" transform=\"translate(13556,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">业</text></g><g data-mml-node=\"mi\" transform=\"translate(14556,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">提</text></g><g data-mml-node=\"mi\" transform=\"translate(15556,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">交</text></g><g data-mml-node=\"mi\" transform=\"translate(16556,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(17556,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g></g></g></svg></mjx-container><br> 平均周转时间是指多个作业周转时间的平均值：<br> <mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -1.577ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"61.934ex\" height=\"4.88ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1460 27374.9 2157\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">平</text></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">均</text></g><g data-mml-node=\"mi\" transform=\"translate(2000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">周</text></g><g data-mml-node=\"mi\" transform=\"translate(3000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">转</text></g><g data-mml-node=\"mi\" transform=\"translate(4000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(5000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g><g data-mml-node=\"mo\" transform=\"translate(6277.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(7333.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">作</text></g><g data-mml-node=\"mi\" transform=\"translate(1389,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">业</text></g><g data-mml-node=\"mn\" transform=\"translate(2389,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">的</text></g><g data-mml-node=\"mi\" transform=\"translate(3889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">周</text></g><g data-mml-node=\"mi\" transform=\"translate(4889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">转</text></g><g data-mml-node=\"mi\" transform=\"translate(5889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(6889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g><g data-mml-node=\"mo\" transform=\"translate(8111.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9111.4,0)\"><path data-c=\"B7\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9611.7,0)\"><path data-c=\"B7\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10111.9,0)\"><path data-c=\"B7\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10612.1,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(11612.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">作</text></g><g data-mml-node=\"mi\" transform=\"translate(12612.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">业</text></g><g data-mml-node=\"mi\" transform=\"translate(13612.3,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(14212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">的</text></g><g data-mml-node=\"mi\" transform=\"translate(15212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">中</text></g><g data-mml-node=\"mi\" transform=\"translate(16212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">转</text></g><g data-mml-node=\"mi\" transform=\"translate(17212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(18212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g><g data-mml-node=\"mo\" transform=\"translate(19212.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(9720.7,-686)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><rect width=\"19801.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container><br> 带权周转时间是指作业周转时间与作业实际运行时间的比值<br> <mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -2.059ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"35.687ex\" height=\"5.285ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1426 15773.6 2336\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">带</text></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">权</text></g><g data-mml-node=\"mi\" transform=\"translate(2000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">周</text></g><g data-mml-node=\"mi\" transform=\"translate(3000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">转</text></g><g data-mml-node=\"mi\" transform=\"translate(4000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(5000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g><g data-mml-node=\"mo\" transform=\"translate(6277.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(7333.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(1220,676)\"><g data-mml-node=\"mi\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">作</text></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">业</text></g><g data-mml-node=\"mi\" transform=\"translate(2000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">周</text></g><g data-mml-node=\"mi\" transform=\"translate(3000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">转</text></g><g data-mml-node=\"mi\" transform=\"translate(4000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(5000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-710)\"><g data-mml-node=\"mi\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">作</text></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">业</text></g><g data-mml-node=\"mi\" transform=\"translate(2000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">实</text></g><g data-mml-node=\"mi\" transform=\"translate(3000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">际</text></g><g data-mml-node=\"mi\" transform=\"translate(4000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">运</text></g><g data-mml-node=\"mi\" transform=\"translate(5000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">行</text></g><g data-mml-node=\"mi\" transform=\"translate(6000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(7000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g></g><rect width=\"8200\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container><br> 平均带权周转时间是指多个作业带权周转时间的平均值：<br> <mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -1.577ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"75.509ex\" height=\"4.88ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1460 33374.9 2157\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">平</text></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">均</text></g><g data-mml-node=\"mi\" transform=\"translate(2000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">带</text></g><g data-mml-node=\"mi\" transform=\"translate(3000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">权</text></g><g data-mml-node=\"mi\" transform=\"translate(4000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">周</text></g><g data-mml-node=\"mi\" transform=\"translate(5000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">转</text></g><g data-mml-node=\"mi\" transform=\"translate(6000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(7000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g><g data-mml-node=\"mo\" transform=\"translate(8277.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(9333.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mo\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">作</text></g><g data-mml-node=\"mi\" transform=\"translate(1389,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">业</text></g><g data-mml-node=\"mn\" transform=\"translate(2389,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">的</text></g><g data-mml-node=\"mi\" transform=\"translate(3889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">带</text></g><g data-mml-node=\"mi\" transform=\"translate(4889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">权</text></g><g data-mml-node=\"mi\" transform=\"translate(5889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">周</text></g><g data-mml-node=\"mi\" transform=\"translate(6889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">转</text></g><g data-mml-node=\"mi\" transform=\"translate(7889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(8889,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g><g data-mml-node=\"mo\" transform=\"translate(10111.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(11111.4,0)\"><path data-c=\"B7\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(11611.7,0)\"><path data-c=\"B7\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(12111.9,0)\"><path data-c=\"B7\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(12612.1,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(13612.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">作</text></g><g data-mml-node=\"mi\" transform=\"translate(14612.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">业</text></g><g data-mml-node=\"mi\" transform=\"translate(15612.3,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(16212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">的</text></g><g data-mml-node=\"mi\" transform=\"translate(17212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">带</text></g><g data-mml-node=\"mi\" transform=\"translate(18212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">权</text></g><g data-mml-node=\"mi\" transform=\"translate(19212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">周</text></g><g data-mml-node=\"mi\" transform=\"translate(20212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">转</text></g><g data-mml-node=\"mi\" transform=\"translate(21212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(22212.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g><g data-mml-node=\"mo\" transform=\"translate(23212.3,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(11720.7,-686)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><rect width=\"23801.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container></li>\n<li>等待时间：指进程处于等处理机状态的时间之和，等待时间越长，用户满意度越低。</li>\n<li>响应时间：指从用户提交请求到系统首次响应所用的时间。</li>\n</ol>\n<h3 id=\"调度算法\"><a href=\"#调度算法\" class=\"headerlink\" title=\"调度算法\"></a>调度算法</h3><h4 id=\"先来先服务-FCFS\"><a href=\"#先来先服务-FCFS\" class=\"headerlink\" title=\"先来先服务(FCFS)\"></a>先来先服务(FCFS)</h4><p>每次从就绪队列中选择最先进入的进程，直到完成或者阻塞。这种算法属于不可剥夺算法，从表面上看对所有进程都是公平的，但是会导致来的晚的短作业等待时间长。</p>\n<h4 id=\"短作业优先-SJF\"><a href=\"#短作业优先-SJF\" class=\"headerlink\" title=\"短作业优先(SJF)\"></a>短作业优先(SJF)</h4><p>短作业优先算法从就绪队列中选择一个或若干个估计运行时间最短的作业。该算法会产生<strong>饥饿现象</strong>，使得长作业长期得不到执行。同时该算法也不考虑作业的优先级，因此不会保证重要任务被优先执行。  </p>\n<p>该算法对作业的选择严重依赖于估计出的运行时间，但估计运行时间并不准确，因此实际运行过程中该算法可能并不能够做到短作业优先。</p>\n<h4 id=\"优先级调度\"><a href=\"#优先级调度\" class=\"headerlink\" title=\"优先级调度\"></a>优先级调度</h4><p>优先级调度算法从就绪队列中选择优先级最高的一个或几个作业。该算法可分为非剥夺优先级调度算法和剥夺式优先级调度算法。  </p>\n<p>根据进程创建后优先级是否可变又可以分为静态优先级和动态优先级。</p>\n<h4 id=\"高响应比优先算法\"><a href=\"#高响应比优先算法\" class=\"headerlink\" title=\"高响应比优先算法\"></a>高响应比优先算法</h4><p>高响应比优先算法主要用于作业调度，是对FCFS和SJF的一种综合平衡。响应比可以描述为 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -1.158ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"28.042ex\" height=\"3.447ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1011.8 12394.8 1523.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">响</text></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">应</text></g><g data-mml-node=\"mi\" transform=\"translate(2000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">比</text></g><g data-mml-node=\"mo\" transform=\"translate(3277.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(4333.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,481.4) scale(0.707)\"><g data-mml-node=\"mi\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">等</text></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">待</text></g><g data-mml-node=\"mi\" transform=\"translate(2000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(3000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g><g data-mml-node=\"mo\" transform=\"translate(4000,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4778,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">要</text></g><g data-mml-node=\"mi\" transform=\"translate(5778,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">求</text></g><g data-mml-node=\"mi\" transform=\"translate(6778,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">服</text></g><g data-mml-node=\"mi\" transform=\"translate(7778,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">务</text></g><g data-mml-node=\"mi\" transform=\"translate(8778,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(9778,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g></g><g data-mml-node=\"mrow\" transform=\"translate(1909.3,-370.3) scale(0.707)\"><g data-mml-node=\"mi\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">要</text></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">求</text></g><g data-mml-node=\"mi\" transform=\"translate(2000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">服</text></g><g data-mml-node=\"mi\" transform=\"translate(3000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">务</text></g><g data-mml-node=\"mi\" transform=\"translate(4000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(5000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">间</text></g></g><rect width=\"7821.2\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></mjx-container> 。对于短作业而言，其要求服务时间短，响应比就越高，可以优先调度；对于长作业而言，等待时间越长，响应比就越高，最终也可以获得处理机资源从而避免了饥饿现象。</p>\n<h4 id=\"时间片轮转算法\"><a href=\"#时间片轮转算法\" class=\"headerlink\" title=\"时间片轮转算法\"></a>时间片轮转算法</h4><p>时间片轮转算法将进程按FCFS顺序分配时间片，进程在执行完一个时间片后将重新回到队列末尾。  </p>\n<p>时间片大小需要由系统的响应时间、就绪队列中的进程数目以及系统的处理能力确定。</p>\n<h4 id=\"多级反馈队列算法\"><a href=\"#多级反馈队列算法\" class=\"headerlink\" title=\"多级反馈队列算法\"></a>多级反馈队列算法</h4><p>多级反馈队列算法设置了多个就绪队列，每个就绪队列的优先级不同。根据不同优先级队列划分不同长度的时间片，优先级越低，时间片越大。当优先级高的队列中为空时，CPU将被分配给下一级队列中的进程。  </p>\n<p>进程在进入内存后，首先进入最高一级的就绪队列中等待执行，若一个时间片后还没有执行完成，将会被放置进入次优先级的就绪队列中。  </p>\n<p>若执行过程中有更高优先级的进程加入，CPU将被高优先级的进程抢占。</p>\n<h3 id=\"进程同步\"><a href=\"#进程同步\" class=\"headerlink\" title=\"进程同步\"></a>进程同步</h3><p>由于进程的异步性导致的进程之间推进速度不可预测，当多个进程需要协同或竞争使用某一资源时，不可避免地需要等待或通知其它进程。这种在同一时刻仅允许一个进程使用的资源又被称为<strong>临界资源</strong>，在进程中访问临界资源的代码块被称为<strong>临界区</strong>。</p>\n<p>同步和互斥是进程之间的制约关系。同步是<strong>直接制约关系</strong>，是指进程之间需要依靠某种顺序执行而必须建立的制约关系，比如生产者消费者；互斥是<strong>间接制约关系</strong>，是指多个进程之间对于某类资源的争用，比如打印机的使用。</p>\n<h3 id=\"临界区互斥方法\"><a href=\"#临界区互斥方法\" class=\"headerlink\" title=\"临界区互斥方法\"></a>临界区互斥方法</h3><h4 id=\"软件实现的方法\"><a href=\"#软件实现的方法\" class=\"headerlink\" title=\"软件实现的方法\"></a>软件实现的方法</h4><h5 id=\"单标志法\"><a href=\"#单标志法\" class=\"headerlink\" title=\"单标志法\"></a>单标志法</h5><div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #758575DD\">// P0进程</span></span>\n<span class=\"line\"><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">turn </span><span style=\"color: #CB7676\">!=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">critical section</span><span style=\"color: #666666\">;</span><span style=\"color: #758575DD\"> // 临界区</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">turn </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">remainder section</span><span style=\"color: #666666\">;</span><span style=\"color: #758575DD\"> // 剩余区</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #758575DD\">// P1进程</span></span>\n<span class=\"line\"><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">turn </span><span style=\"color: #CB7676\">!=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">critical section</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">turn </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">remainder section</span></span></code></pre></div><p>该算法的两个进程必须交替进入临界区，否则若一个进程停止执行，另一个进程会陷入死等。</p>\n<h4 id=\"双标志法先检查\"><a href=\"#双标志法先检查\" class=\"headerlink\" title=\"双标志法先检查\"></a>双标志法先检查</h4><div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #758575DD\">// Pi进程</span></span>\n<span class=\"line\"><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">j</span><span style=\"color: #666666\">]);</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">true</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">critical section</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">false</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">remainder section</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #758575DD\">// Pj进程</span></span>\n<span class=\"line\"><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">]);</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">j</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">true</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">critical section</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">j</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">false</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">remainder section</span></span></code></pre></div><p>当进程并发执行时，若遇到同时先后执行while语句时，将会导致互斥失效。</p>\n<h4 id=\"双标志法后检查\"><a href=\"#双标志法后检查\" class=\"headerlink\" title=\"双标志法后检查\"></a>双标志法后检查</h4><div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #758575DD\">// Pi进程</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">true</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">j</span><span style=\"color: #666666\">]);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">critical section</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">false</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">remainder section</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #758575DD\">// Pj进程</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">j</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">true</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">]);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">critical section</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">j</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">false</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">remainder section</span></span></code></pre></div><p>当进程并发执行时，若遇到同时先后执行while语句时，将会导致饥饿现象。</p>\n<h4 id=\"Peterson’s-Algorithm\"><a href=\"#Peterson’s-Algorithm\" class=\"headerlink\" title=\"Peterson’s Algorithm\"></a>Peterson’s Algorithm</h4><div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #758575DD\">// Pi进程</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">true</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">turn </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> j</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">j</span><span style=\"color: #666666\">]</span><span style=\"color: #CB7676\">&amp;&amp;</span><span style=\"color: #DBD7CAEE\">turn</span><span style=\"color: #CB7676\">==</span><span style=\"color: #DBD7CAEE\">j</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">critical section</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">false</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">remainder section</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #758575DD\">// Pj进程</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">j</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">true</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">turn </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> i</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">]</span><span style=\"color: #CB7676\">&amp;&amp;</span><span style=\"color: #DBD7CAEE\">turn</span><span style=\"color: #CB7676\">==</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">critical section</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #BD976A\">flag</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">j</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">false</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">remainder section</span></span></code></pre></div>","text":"进程进程的概念和特征进程的概念从不同的角度看，进程可以有不同的定义，比较典型的是： 进程是程序的一次执行过程 进程是一个程序及其数据在处理机上顺序执行时所发生的...","permalink":"/post/进程管理","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"},{"name":"Review","slug":"Review","count":7,"path":"api/tags/Review.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">进程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%A6%82%E5%BF%B5%E5%92%8C%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">进程的概念和特征</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">进程的概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">进程的特征</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">进程的状态</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E5%88%87%E6%8D%A2%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">进程切换过程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%9D%97\"><span class=\"toc-text\">进程控制块</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1\"><span class=\"toc-text\">进程间通信</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B1%E4%BA%AB%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">共享存储</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92\"><span class=\"toc-text\">消息传递</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">直接通信方式</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%97%B4%E6%8E%A5%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">间接通信方式</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%A1%E9%81%93%E9%80%9A%E4%BF%A1\"><span class=\"toc-text\">管道通信</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%BA%BF%E7%A8%8B\"><span class=\"toc-text\">多线程</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6\"><span class=\"toc-text\">处理机调度</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B0%83%E5%BA%A6%E5%B1%82%E6%AC%A1\"><span class=\"toc-text\">调度层次</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6\"><span class=\"toc-text\">进程调度</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">调度算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%88%E6%9D%A5%E5%85%88%E6%9C%8D%E5%8A%A1-FCFS\"><span class=\"toc-text\">先来先服务(FCFS)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9F%AD%E4%BD%9C%E4%B8%9A%E4%BC%98%E5%85%88-SJF\"><span class=\"toc-text\">短作业优先(SJF)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%85%88%E7%BA%A7%E8%B0%83%E5%BA%A6\"><span class=\"toc-text\">优先级调度</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AB%98%E5%93%8D%E5%BA%94%E6%AF%94%E4%BC%98%E5%85%88%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">高响应比优先算法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%97%B4%E7%89%87%E8%BD%AE%E8%BD%AC%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">时间片轮转算法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%BA%A7%E5%8F%8D%E9%A6%88%E9%98%9F%E5%88%97%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">多级反馈队列算法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5\"><span class=\"toc-text\">进程同步</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%B4%E7%95%8C%E5%8C%BA%E4%BA%92%E6%96%A5%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">临界区互斥方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">软件实现的方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8D%95%E6%A0%87%E5%BF%97%E6%B3%95\"><span class=\"toc-text\">单标志法</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%8C%E6%A0%87%E5%BF%97%E6%B3%95%E5%85%88%E6%A3%80%E6%9F%A5\"><span class=\"toc-text\">双标志法先检查</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%8C%E6%A0%87%E5%BF%97%E6%B3%95%E5%90%8E%E6%A3%80%E6%9F%A5\"><span class=\"toc-text\">双标志法后检查</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Peterson%E2%80%99s-Algorithm\"><span class=\"toc-text\">Peterson’s Algorithm</span></a></li></ol></li></ol></li></ol>","author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"编译原理考点","uid":"fba5abef53d9d5ea6aea61fb0369866c","slug":"编译原理考点","date":"2023-03-15T12:38:09.000Z","updated":"2023-12-06T14:52:33.108Z","comments":true,"path":"api/articles/编译原理考点.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/os.jpg","text":"编译原理作业： 正则表达式生成NFA&#x2F;DFA LL1 词法分析 LR 词法分析 编译程序的功能组织结构图 ‘词法分析器→语法分析器→语义分析器→中间代...","permalink":"/post/编译原理考点","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"基础","slug":"基础","count":35,"path":"api/categories/基础.json"}],"tags":[{"name":"Review","slug":"Review","count":7,"path":"api/tags/Review.json"},{"name":"编译原理","slug":"编译原理","count":1,"path":"api/tags/编译原理.json"}],"author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"数据库系统","uid":"ab80b4e122bbda900a1a6ace41232d32","slug":"数据库系统","date":"2022-04-08T14:18:27.000Z","updated":"2023-11-21T07:47:36.111Z","comments":true,"path":"api/articles/数据库系统.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/database.png","text":"数据库（数据仓库）数据库是长期储存在计算机内、有组织的、可共享的大量数据的集合 数据库中的数据按照一定的数据模型组织、描述、存储。具有较小冗余度、较高数据独立性...","permalink":"/post/数据库系统","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"基础","slug":"基础","count":35,"path":"api/categories/基础.json"}],"tags":[{"name":"Review","slug":"Review","count":7,"path":"api/tags/Review.json"},{"name":"数据库","slug":"数据库","count":1,"path":"api/tags/数据库.json"}],"author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}