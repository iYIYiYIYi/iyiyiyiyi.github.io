{"title":"An introduction to MPEG-G, the new ISO standard for genomic information representation","uid":"b920aa42c0cdc455a6f0f73719d4c829","slug":"introduction_to_MPEG-G","date":"2023-12-03T06:55:49.000Z","updated":"2023-12-10T03:33:07.586Z","comments":true,"path":"api/articles/introduction_to_MPEG-G.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/bioinfo.jpg","content":"<h1 id=\"对ISO的新型基因信息编码标准MPEG-G的简介\"><a href=\"#对ISO的新型基因信息编码标准MPEG-G的简介\" class=\"headerlink\" title=\"对ISO的新型基因信息编码标准MPEG-G的简介\"></a>对ISO的新型基因信息编码标准MPEG-G的简介</h1><h2 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h2><p>MPEG-G 的标准化是一项国际化的努力成果，它定义了一种压缩数据的格式，用于处理、传输和共享大规模的基因数据。该规范由一系列规范组成，用于描述：1.规范格式的语法 。 2.用于检索在兼容文件或者比特流中编码的信息的规范解码过程。这种解码过程可以使用最领先的压缩技术，这种技术与当前正在使用的存储格式相比表现出了显著的压缩增益。此外，该标准还提供了大量急需的功能，比如选择性访问、数据聚合、压缩数据的应用程序编程接口、支持数据保护机制的标准接口、流支持以及评估实现一致性的程序。ISO&#x2F;IEC致力于支持标准规范的维护和可用性，这保证了使用MPEG-G的引用程序的持久性。最后，该标准通过对FASTQ&#x2F;SAM&#x2F;BAM文件格式转换的支持，确保与现有基因组信息处理管道的互操作性与集成性。</p>\n<p>在本文中我们概述了MPEG-G规范，特别关注它提供的主要优点和新颖功能。由于该标准仅指定解码过程，因此在速度和压缩比方面的编码性能可能会根据特定的编码器实现而有所不同，并且可能会在MPEG-G的生命周期内得到改善。因此，此处提供的性能统计数据仅使标准中所含技术的指示性基线示例。</p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>高通量测序技术(HTS)的迅速发展有可能使基因组信息的使用成为许多领域的日常工作。随着因美纳发布新一代的HTS机器，整个人类基因组测序的成本已经降到不到1000美元。在接下来的几年里，这个价格可以预见地会下降得更多，到100美元附近。现在，单个测序系统可以每年提供相当于10000个完整人类基因组的测序，这相当于超过1PB的数据。这一现实导致人们预测生成的基因组数据量将很快超过天文数据量。到那个时候用于存储、转移和处理大容量基因数据的IT开销会大幅超过测序的花销。此外，缺乏适当的压缩数据表示被广泛认为使限制基因组数据在广泛的科学和公共卫生场景中使用的潜力的关键因素。注意这不是因为缺乏特定的用于基因信息的压缩器，而是缺乏一种有效、长期以及可靠的解决方案来提供一个完整的框架，它要做的远不止于压缩，而是对整个基因组信息的表示。</p>\n<p>基于上述现实，运动图像专家组 (MPEG)——国际标准化组织 (ISO) 和国际电工委员会 (IEC) 的联合工作组——正在与生物数据工作流程集成商 ISO 技术委员会 276&#x2F;第 5 工作组合作，制定MPEG-G，一种用于压缩、存储、传输和处理测序数据的新开放标准。在这30年的活动中，MPEG 已经开发了几代成功的标准，将媒体世界从模拟转变为数字（例如，用于音频的MP3和AAC，以及用于视频的AVC&#x2F;H.264和HEVC&#x2F;H.265）。这些标准实现了我们今天在数字媒体领域可以见证的互操作性和集成性。</p>\n<p>MPEG-G 是按照 MPEG 所有标准采用的开放且严格的流程开发的。第一步是为初级和次级数据分析期间产生的原始和对齐读取的压缩表示生成要求列表。该标准还包括有效传输和选择性访问压缩基因组数据的要求。确定所有需求的过程是由来自不同领域的专家进行的广泛的跨学科努力，包括生物信息学、生物学、信息论、电信、视频和数据压缩、数据存储和信息安全。</p>\n<p>随后于 2016 年 6 月发出了提案征集，并于 2016 年 10 月收到了来自 17 个组织的 15 份回复。已使用多种标准对已确定的技术进行了评估，包括但不限于压缩性能、选择性访问能力和灵活性。对各种测序数据进行有效编码。对不同类型的基因组数据进行单独评估：序列读取、质量值、读取标识符、比对信息和元数据。此外，通过测量编码和解码速度以及内存使用情况对计算复杂性进行了初步评估。这确保了候选技术与高效实施兼容。在对提交的提案进行评估和排名时，还考虑了对非顺序访问、扩展核苷酸字母表、附加元数据编码（可扩展性）以及测序质量值（通常称为质量分数）的量化编码的支持。</p>\n<p>最有价值的技术被整合其中，以提供 i) 测序技术生成的原始基因组数据的压缩，ii) 当在参考序列的背景下考虑基因组数据时，压缩与基因组数据相关的比对信息，以及 iii) 定义支持存储和传输的基因组信息传输层。此外，MPEG-G 标准支持与复杂用例相关的功能，其中大多数功能不受当前现有格式（例如 FASTQ 和 SAM&#x2F;BAM）的支持。 MPEG-G 解决的著名用例包括：</p>\n<ul>\n<li>对压缩数据的选择性访问（根据若干项标准）</li>\n<li>数据流</li>\n<li>压缩文件的合并和基因组研究的聚合</li>\n<li>隐私规则的执行</li>\n<li>可选的对测序数据和元数据的加密</li>\n<li>基因组片段的注释和链接</li>\n<li>测序数据和元数据的增量更新</li>\n</ul>\n<p>最后，与现有的基因信息处理管线的集成和互通性通过支持FASTQ、SAM&#x2F;BAM文件的互相转换来保证。</p>\n<p>下面我们将更详细地描述 MPEG-G 标准，重点介绍其特性和功能，并讨论该标准在未来基因组数据存储、访问、共享和处理中的作用。需要澄清的是，MPEG-G 标准仅规定了从使用 MPEG-G 编码的文件和流中提取信息所需的解码器语法和算法。这种方法允许不断开发新的和更优化的编码器，同时保持与任何现有标准兼容解码器的兼容性。</p>\n<p><img src=\"/../gallery/papers/introduction_to_MPEG_G/fig1.jpg\" alt=\"Figure 1\"></p>\n<center>Figure 1: MPEG-G 文件格式中访问单元的关键元素。每个访问单元包含仅属于一个数据类的基因组记录。</center>\n\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><h3 id=\"基因信息表示\"><a href=\"#基因信息表示\" class=\"headerlink\" title=\"基因信息表示\"></a>基因信息表示</h3><p>MPEG-G技术提供了对于原始基因序列和与参考基因对齐后的基因序列的存储以及传输能力。并更进一步地提供了对单个参考基因（组合）以及其集合的表示。MPEG-G中这种对基因组序列数据的表示是基于<code>Genomic Records</code>概念的。<code>Genomic Records</code>是一种包含了单个序列的读或者一系列成对的序列读的数据结构。如果可行，它将会把序列和对齐信息。一组读标记以及一组质量分数组合起来。</p>\n<p>在不打破传统方法的情况下，<code>Genomic Records</code>数据结构提供了一种更紧凑、更简单且易于管理的数据结构，将与单个 DNA 模板相关的所有信息分组：从简单的原始测序数据到复杂的比对信息。然而虽然<code>Genomic Records</code>是用于基因组信息交互和操作的合适数据结构，但它也不是一个合适的用于压缩的原子数据结构。例如，在处理选择性数据访问时，<code>Genomic Records</code>是一个太小的单元，无法在实现高效、快速的信息检索的同时又具有高度可压缩性。</p>\n<p>为了实现这两个目标，<code>Genomic Records</code>被分类并分组为六个数据类，这些数据类根据其与一个或多个参考序列的比对结果来定义（例如，数据类 P 中的完美匹配、仅在数据类 M 中包含替换的匹配、数据类 I 中包含插入缺失的匹配项，数据类 U 中包含无法映射的读数或原始测序数据）。为了进一步提高压缩效率，<code>Genomic Records</code>簇中包含的信息被分成所谓的描述符流。每个描述符流包含特定类型的信息。这些描述符流的示例有：映射位置、替换数量和读取长度（参见方法）。</p>\n<p>将序列读取分类为数据类使得能够开发强大的选择性数据访问机制。为了实现这一点，MPEG-G 引入了<code>Access Units</code>的概念，它是压缩域中信息编码和访问的基本结构。<code>Access Units</code>是可以独立访问和检查的编码基因组信息的单元。事实上，<code>Access Units</code>仅由属于特定数据类的基因组记录组成，因此构成了一个能够提供强大过滤功能的数据结构，以有效支持许多不同的用例。图 1 显示了 MPEG-G 文件格式中访问单元的基本元素。 </p>\n<p><code>Access Units</code>包括标头和一组数据块。<code>Access Units</code>标头包含描述块中编码的基因组数据的元数据，例如数据类型、读数计数、读数映射到的基因组区域、存在多重比对、存在剪接读数、包含上面&#x2F;上替换的编码读数的数量低于给定阈值和子序列（例如，来自单细胞 RNA 测序实验的条形码）等。块包含编码（即压缩）的基因组数据。可选地，附加数据结构可以与<code>Access Units</code>相关联。例如，这些数据结构可以包含 SAM 辅助字段或元数据，这些字段或元数据与管理<code>Access Units</code>的保护机制有关。</p>\n<p><img src=\"/../gallery/papers/introduction_to_MPEG_G/fig2.jpg\" alt=\"Figure 2\"></p>\n<center>Figure 2: MPEG-G 文件格式的关键元素。多个数据集组包含测序数据的多个数据集。每个数据集由包含属于一个特定数据类的基因组记录的 Access Units 组成。每个 Access Units 由读取描述符块组成。</center>\n\n<p>为了促进基因组信息的存储和传输，MPEG-G 指定了基因组数据的数字容器，即 MPEG-G 文件格式（图 2）。如图所示，MPEG-G 文件由文件头和一个或多个名为数据集组的容器组织。每个数据集组同时封装一个或多个数据集、与数据集组关联的标头和可选元数据。最后，每个数据集包含一个标头、可选的元数据容器并携带一个或多个<code>Access Units</code>。文件格式的嵌套性质允许对压缩数据进行有效查询和选择性访问。</p>\n<p>例如，可以使用 MPEG-G 文件来构建三个个体（父亲、母亲、孩子）的基因组测序数据的存储，如下所示：将存在三个不同的数据集组，每个数据集组对应三个个体中的每个个体。然后，每个数据集组将包含与在不同时刻或从不同库执行的同一个体的测序运行相关的数据集。此示例展示了 MPEG-G 文件如何能够将一个或多个个体的整个基因组历史封装在一个独特的文件中，包括与研究、样本等相关的任何元数据。</p>\n<h3 id=\"压缩能力\"><a href=\"#压缩能力\" class=\"headerlink\" title=\"压缩能力\"></a>压缩能力</h3><p>序列数据以及和它们相关的元数据是一组异构数据，每个数据都由子集的统计行为。因此，MPEG-G提供了几个用于区分这些类型的数据及其表示的策略。在MPEG-G的帮助下，压缩性能和选择性数据访问的优化空间是非常大的，并且可以使用许多不同的解决方案，这些解决方案可以正对不同的应用甚至特定的测序技术和物种进行优化。比如，数据压缩模式可以针对高压缩率和索引（存档类应用）或者低延迟（流媒体类型应用）进行优化。甚至对齐的读数可以进行无参考或基于参考的压缩。在后一种案例中，MPEG-G支持使用FASTA或MPEG-G格式的有参考序列。有参考序列的使用可以作为数据集嵌入同一个MPEG-G文件中或者作为外部参考序列存储，这样需要使用一个无歧义的定义来引用这些外部参考序列。质量分数同样可以无损压缩或者量化。</p>\n<p>在MPEG-G规范的开发过程中，根据提案征集的结果，选择了性能最佳的压缩技术来集成到MPEG-G规范中（有关这些技术的列表，请参阅方法部分）。但需要注意的是，作为标准的开发方式，只有解码过程是规范和规定的。这保证了实现该标准的应用程序的互操作性，同时编码过程对算法和特定于实现的创新开放。因此，MPEG-G 可实现的压缩性能因编码器而异，具体取决于各个实现，并且很可能会随着时间的推移而提高。</p>\n<p>尽管如此，为了让读者了解 MPEG-G 可实现的压缩功能，接下来我们将展示该标准支持的一些技术（可在编码器中实现）的压缩性能，以及它们与当前格式的比较。应该注意的是，使这些技术与 MPEG-G 兼容可能需要进行一些语法修改才能生成 MPEG-G 兼容的描述符流，这可能会导致压缩性能略有不同。此外，由于 MPEG-G 文件提供了纯压缩之外的附加功能，因此预计会产生一些较小的开销。</p>\n<p>在当今的常见实践中，SAM文件通常以BAM文件的形式存储或传输，BAM文件本质上是按块二进制化和gzip压缩的SAM文件。 CRAM 格式可以有效地表示对齐的数据，也得到了广泛的接受。相反，FASTQ 文件通常使用通用无损压缩器（例如 gzip）进行压缩。</p>\n<p>例如，FASTQ 文件中包含的信息（即标识符、读取和质量分数）可以由 MPEG-G 编码器以类似于 FaStore 中的方式进行压缩，FaStore 是 FASTQ 文件的最佳压缩器之一文献中提出。在这种情况下，gzip 将 FASTQ 文件平均减少了 70% 以上，而 FaStore 则减少了 85% 以上（对于所有支持的模式，包括无损模式）。当涉及到对齐数据时，MPEG-G 编码器可以使用与 DeeZ 相当的压缩方法，该方法能够将 437 GB H. Sapiens SAM 文件压缩到大约 63 GB，而相比之下，DeeZ 的压缩方法为 75 GB。 CRAM（加扰）或 BAM 的 106 GB。关于质量值的量化，可以应用 QVZ 和 CALQ 等方法，获得比 BAM 高 10 倍的整体压缩增益，同时保留甚至提高变体调用性能.</p>\n<p>最后，熵编码所采用的技术（参见方法）已被证明可以将 MPEG-G 描述符流测试集压缩至未压缩大小的约 21%，每个描述符流的平均处理速度超过 25 MiB&#x2F;s（使用单线程编码）。</p>\n<p>如上所述，这些只是可实现的可能编码性能的示例，并且压缩比以及压缩速度可以根据每个数据集的具体统计特性以及根据编码器的质量和优化能力而变化。另请注意，由于将每个数据集封装到 MPEG-G 兼容文件中，预计会产生一些较小的开销。</p>\n<h3 id=\"压缩之外的MPEG-G\"><a href=\"#压缩之外的MPEG-G\" class=\"headerlink\" title=\"压缩之外的MPEG-G\"></a>压缩之外的MPEG-G</h3><p>除了提供方法来实现最先进的压缩技术之外，该标准还提供了基因组信息处理应用之间互操作的基础。ISO&#x2F;IEC同样致力于支持该标准的维护，以保证使用MEPG-G技术的应用程序的持久性。下面列出了MPEG-G技术的基本特征：</p>\n<h4 id=\"压缩数据的选择性访问\"><a href=\"#压缩数据的选择性访问\" class=\"headerlink\" title=\"压缩数据的选择性访问\"></a>压缩数据的选择性访问</h4><p>在一个MPEG-G文件中嵌入的索引将使得对压缩数据的几种选择性访问的方式成为现实。具体来说，支持以下类型的选择性访问，这些类型可以组合在同一查询中：</p>\n<ul>\n<li>给定参考序列上起始到结束映射位置的基因组间隔</li>\n<li>数据类型（比如一个单数据类）</li>\n<li>替换数量低于&#x2F;高于特定阈值的序列读取</li>\n<li>具有多重比对的序列读取</li>\n<li>匹配原始或未映射读数上先前定义的模式（例如条形码）</li>\n<li>连续和非连续区间的标签，可能跨越多个数据集</li>\n</ul>\n<h4 id=\"数据流化\"><a href=\"#数据流化\" class=\"headerlink\" title=\"数据流化\"></a>数据流化</h4><p>MPEG-G 还提供了对压缩数据进行有效分组的方法。这样，接收设备就能在传输完成之前开始处理数据。MPEG-G 流媒体的主要功能包括：</p>\n<ul>\n<li>数据包大小适应信道特性&#x2F;状态</li>\n<li>流数据的即时索引</li>\n<li>基于数据包的基因组数据过滤</li>\n</ul>\n<p><img src=\"/../gallery/papers/introduction_to_MPEG_G/fig3.jpg\" alt=\"Figure 3\"></p>\n<center>Figure 3: MPEG-G传输格式的关键组件</center>\n\n<p>MPEG-G 内的流式传输是通过传输格式规范实现的，除了图 2 中描述的数据结构（表示文件格式）之外，该规范还提供一组额外的数据结构（数据包和映射表，请参见图 3）。传输格式允许将文件格式结构复用到数据流中，每个数据流都由多个可以动态适应网络特性和条件的数据包组成。此外，传输格式允许在协议级别（例如 TCP&#x2F;IP）上进行错误检测、无序传送以及错误&#x2F;不完整数据的重新传输。文件和传输格式可以通过 MPEG-G 标准中定义的规范转换过程相互转换，不会丢失信息。</p>\n<h4 id=\"基因组研究的聚合以及测序数据和元数据的增量更新\"><a href=\"#基因组研究的聚合以及测序数据和元数据的增量更新\" class=\"headerlink\" title=\"基因组研究的聚合以及测序数据和元数据的增量更新\"></a>基因组研究的聚合以及测序数据和元数据的增量更新</h4><p>多个相关的基因组研究可以封装在同一个 MPEG-G 文件中，同时仍然可以单独访问。数据集和数据集组的概念支持这一点。数据集通常包含测序运行的结果，数据集组通常包含与同一研究相关的运行。文件串联机制支持聚合存储在多个文件中的（部分）研究，该机制不需要对压缩数据进行重新编码。对于可以与附加访问单元集成的单个数据集来说也是如此，而无需解压缩和重新压缩现有的访问单元。</p>\n<p>对于聚合，只需要更新索引信息和部分关联元数据。一旦聚合了不同的研究，就可以对多个研究进行横向查询（例如，“选择所有压缩样本的染色体 1”）。</p>\n<h4 id=\"隐私规则的执行\"><a href=\"#隐私规则的执行\" class=\"headerlink\" title=\"隐私规则的执行\"></a>隐私规则的执行</h4><p>MPEG-G 文件中编码的数据可以链接到多个所有者定义的隐私规则，这些规则对数据访问和使用施加限制。 MPEG-G 提供了一种语法来表达要在编码内容上强制执行的隐私规则的层次结构。例如，这使得能够在不同用户之间实现权利委托。数据所有者可以将不同级别的访问权限委托给不同的用户，以便私人医生比对大量人群进行研究的研究中心拥有更高的访问权限。</p>\n<h4 id=\"对序列数据和元数据的可选加密\"><a href=\"#对序列数据和元数据的可选加密\" class=\"headerlink\" title=\"对序列数据和元数据的可选加密\"></a>对序列数据和元数据的可选加密</h4><p>MPEG-G 支持基因组信息在逻辑数据结构层次结构的不同级别上进行加密。编码文件的每个可识别部分都可以与访问控制机制（例如加密或数字签名）相关联。保护机制的粒度范围从对齐读取的一些特征（例如映射位置）的加密到整个数据集或数据集组。 MPEG-G 不强制选择任何特定的元素进行加密，但提供了支持任何类型策略的语法。然而，某些参数（例如密码）仅限于值集，以便遵守安全建议并简化实现和兼容性。这种方法允许将数据保护的潜在资源密集型应用仅限于真正需要保护的数据部分，而以明文形式留下不敏感的数据。</p>\n<h4 id=\"压缩域中基因组片段的注释和连接\"><a href=\"#压缩域中基因组片段的注释和连接\" class=\"headerlink\" title=\"压缩域中基因组片段的注释和连接\"></a>压缩域中基因组片段的注释和连接</h4><p>MPEG-G 规范提供了将元数据与压缩基因组数据相关联的标准语法，以实现注释机制。此外，MPEG-G 还支持连接单个基因组样本内或跨多个基因组样本的片段。为此，MPEG-G 支持不同压缩基因组数据块的聚合，以便可以通过单个查询执行检索。该机制依赖于将文本标识符与表达要聚合的基因组数据的特征的语法相关联的概念。这些特征可以是参考序列上的基因组间隔、数据类型（即数据类）或数据集标识符。这使得能够连接彼此相距较远的基因组区域（例如，在不同染色体上或来自不同测序运行），从而简化了数据的注释和检索。</p>\n<h4 id=\"与现有主要技术和格式的互操作性\"><a href=\"#与现有主要技术和格式的互操作性\" class=\"headerlink\" title=\"与现有主要技术和格式的互操作性\"></a>与现有主要技术和格式的互操作性</h4><p>MPEG-G 支持与 FASTQ、SAM 或 BAM 等格式之间的转换。 MPEG-G 规范提供了有关如何将现有内容转码为 MPEG-G 并返回其原始格式的指南。这对于无法从 SAM 规范明确推断转码机制的情况尤其有用。</p>\n<h3 id=\"MPEG-G-实现框架\"><a href=\"#MPEG-G-实现框架\" class=\"headerlink\" title=\"MPEG-G 实现框架\"></a>MPEG-G 实现框架</h3><p>MPEG-G 规范包括规范性参考软件和一致性测试，它们通过工具和方法补充语法、语义和解码过程的正式规范，以实现稳健且可靠的一致性验证。此外，标准制定过程中还编制了基因组信息数据库。该数据库包含用于评估基因组信息压缩技术性能的测序数据集合。</p>\n<h4 id=\"参考软件\"><a href=\"#参考软件\" class=\"headerlink\" title=\"参考软件\"></a>参考软件</h4><p>为了支持和指导 MPEG-G 的实施，该标准包括一个规范的参考软件。参考软件是规范的，因为解码器的任何一致实现，采用相同一致的压缩比特流，并使用相同的规范输出数据结构，将输出相同的数据。也就是说，符合 MPEG-G 标准的实现并不期望遵循算法，甚至不遵循参考软件使用的编程技术；此类软件仅用于支持开发兼容设备和应用程序生态系统的实施过程。因此，规范实现的可用性只是对文本规范的额外支持。还应该强调的是，参考软件并不是 MPEG-G 解码器的优化实现。这也意味着参考软件不应用作性能基准。</p>\n<h4 id=\"一致性\"><a href=\"#一致性\" class=\"headerlink\" title=\"一致性\"></a>一致性</h4><p>一致性对于提供测试和验证 MPEG-G 技术在不同设备和应用程序中正确实施以及确保所有系统之间的互操作性的基础至关重要。一致性测试指定了一个规范程序来评估一组详尽的压缩数据是否符合标准：每个声称符合 MPEG-G 的解码器都必须证明完整一致性测试台的正确解码。</p>\n<p>用于一致性测试的比特流集可在 MPEG-G 基因组信息数据库中找到（见下文）。</p>\n<h4 id=\"MPEG-G基因组信息数据库\"><a href=\"#MPEG-G基因组信息数据库\" class=\"headerlink\" title=\"MPEG-G基因组信息数据库\"></a>MPEG-G基因组信息数据库</h4><p>MPEG-G基因组信息数据库是一个统计学意义上的序列数据集合，可用于评估基因信息压缩技术的性能。除了真实的测序数据，数据库中还包含了一组参考序列和变量调用实验所需的支持数据（参见 方法）。在编译数据库时，特别强调合并尽可能多样化的数据。因此，它包含由不同测序技术生成的数据，这些数据是为了进行不同实验类型（例如，WGS、RNA-seq 等）而生成的，并且源自不同物种的样本，例如智人、黑腹果蝇或大肠杆菌。</p>\n<h2 id=\"讨论\"><a href=\"#讨论\" class=\"headerlink\" title=\"讨论\"></a>讨论</h2><p>广泛使用的基因组信息表示格式（即 FASTQ 和 SAM&#x2F;BAM）是在测序数据稀缺珍贵、应用范围有限的情况下设计的。典型的缺点包括未指定的应用程序编程接口，阻碍了可互操作的应用程序和设备的创建；没有执行隐私保护的框架；未记录的延期和修改流程；压缩性能差（在某些情况下仅限于应用于纯文本的通用压缩器）；缺乏一致性测试；没有指定传输格式，也不支持分组数据流。高通量测序机引入的新范式——相对便宜的高覆盖率测序，具有几乎无限数量的衍生生物协议和下游分析工作流程——强烈鼓励采用更复杂的方式来存储、处理和共享基因组数据。只有识别并解决现有格式中存在的所有基本设计问题，才能实现能够高效处理测序数据的解决方案，类似于当今共享数字媒体内容的解决方案。MPEG-G 代表了朝这个方向迈出的重要一步。它为全新的软件解决方案铺平了道路，使世界各地的独立团体和组织能够无缝通信和共享数据，而不会失去与现有应用程序的互操作性。</p>\n<p>还可以进一步类比数字媒体行业。 MPEG-G 旨在使基因组数据访问、处理和共享（无论是在云中还是在本地存储中）像流式传输音频文件或观看电影一样简单。换句话说，MPEG-G 规范有望为基因组学带来与上个世纪末和本世纪初数字媒体行业所见证的相同的突破性发展。这场革命的主要驱动力之一是数据压缩器令人印象深刻的性能，它使数字媒体存储和传输的规模达到了前所未有的水平。另一个决定因素是在 ISO 和 IEC 等国际中立机构的监督下公开、公平的技术评估和规范过程。这鼓励了世界各地的小型和大型组织联合起来并在协作环境中工作，同时为该标准的长期稳定性提供了保证，该标准是由大量专家维护的公共文件。最后，系统互操作性标准接口的规范使得兼容技术和产品的激增，构成了我们今天所知的数字媒体生态系统。这些元素都存在于 MPEG-G 中；希望它们能够促进类似生态系统的创建（见图 4），最终使个性化医疗等基因组应用民主化。</p>\n<p>随着MPEG-G标准的发布，基因组数据共享将受益于文件大小的减小和接口的标准化；将提供分析工具以及访问和操作数据的复杂方法；由于内置访问控制，安全和隐私保护将得到无缝实施。目前可以想象但由于要传输的数据量巨大或 IT 开发成本高昂而不易实施的应用程序可能很快就会成为现实。此外，开放透明的维护和标准更新过程将鼓励机构投资于该技术的采用和进一步开发。因此，MPEG-G有望在未来很长一段时间内继续发展、改进并结出硕果。</p>\n<p><img src=\"/../gallery/papers/introduction_to_MPEG_G/fig4.jpg\" alt=\"Figure 4\"></p>\n<center>Figure 4: 由MPEG-G驱动的基因生态</center>\n\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><p>在这个部分我们会更加正式地描述MPEG-G标准及其组成部分。具体来说，MPEG-G标准分为以下五个部分:</p>\n<ol>\n<li>基因组信息的存储和传输。这一部分定义了基因组数据在MPEG-G结构中是如何被组织起来进行传输（比如 流式传输）和存储的。我们提供了一个参考的转换过程来将原本的文件格式转换成传输格式以及相反的过程。</li>\n<li>基因组信息的编码。这一部分定义了用于表示未对齐（比如 原始数据）和对齐的基因组序列读及其相关的标识符，质量值和参考序列的语法。这是标准的一部分，通过描述解析 MPEG-G 比特流的兼容解码器的规范行为来处理压缩。MPEG-G仅指定解码过程，而可以使用任何编码算法，只要它产生符合这部分标准的比特流。</li>\n<li>元数据和API。该标准的这一部分指定了如何将符合 MPEG-G 标准的比特流与描述基因组研究或测序运行等元数据集成。本部分涵盖的其他主题包括从外部系统访问 MPEG-G 数据的规范接口规范、实现访问控制、完整性验证以及身份验证和授权机制的机制规范。本部分还包括专门介绍 SAM 和 MPEG-G 数据结构之间映射的信息部分。</li>\n<li>参考软件。为了帮助和指导 MPEG-G 的实现，该标准包括一个规范性参考软件。参考软件是规范的，因为解码器的任何一致实现，采用相同一致的压缩比特流并使用相同的规范输出数据结构，将输出相同的数据。</li>\n<li>一致性。该标准的这一部分对于提供测试和验证 MPEG-G 技术在不同设备和应用程序中正确实施的方法至关重要，以确保所有系统之间的互操作性。一致性测试指定了一个规范程序来评估一组详尽的压缩数据是否符合标准。</li>\n</ol>\n<p>下面时关于1、2、3部分更详细的描述。</p>\n<h3 id=\"Part-1：基因组信息的传输和存储\"><a href=\"#Part-1：基因组信息的传输和存储\" class=\"headerlink\" title=\"Part 1：基因组信息的传输和存储\"></a>Part 1：基因组信息的传输和存储</h3><p>MPEG-G定义了一个数字容器用于压缩后的基因组数据的传输和存储。在 MPEG 术语中，用于在电信网络上传输分组数据（比如 流式传输）的容器格式称为传输格式，而用于在物理介质（比如 文件）上存储的容器格式称为文件格式。将流转换为文件以及反之亦然的过程是规范的并在标准中指定。</p>\n<h4 id=\"文件格式\"><a href=\"#文件格式\" class=\"headerlink\" title=\"文件格式\"></a>文件格式</h4><p>一个MPEG-G文件由文件头和一个或多个叫做数据集组的容器组成。每个数据集组包含一个数据集组头，可选的元数据容器和一个或多个封装的数据集。每个数据集有一个数据集头，可选的元数据容器并且包含一个或者多个<code>Access Units</code>。<code>Access Unit</code>实际上才是存储压缩基因组数据的容器。它包含一个<code>Access Unit</code>头，头部提供了对压缩内容的描述（比如数据类型、读数、压缩读数的基因区位等）。</p>\n<p>在MPEG-G文件没有使用描述符号流构建的情况下，<code>Access Unit</code>会包含一系列包含编码信息的数据块，这些数据块可以使用数据集层面乃至其它<code>Access Unit</code>中的全局数据进行独立解码，例如包含 MPEG-G 编码参考序列数据的<code>Access Unit</code>。否则，编码信息块按类型分组、连接并存储为描述符流。然后，索引机制允许将给定的访问单元与相应的块集合相关联。在任何一种情况下，每个块都使用最适合测量的统计特性的熵编码技术（参见下面的第 2 部分）进行压缩。这种嵌套数据结构如Figure 2 所示。</p>\n<h4 id=\"传输格式\"><a href=\"#传输格式\" class=\"headerlink\" title=\"传输格式\"></a>传输格式</h4><p>除了为文件格式定义的数据容器之外，MPEG-G 还指定支持网络上分组数据传输的数据结构。此类结构被定义为既承载压缩的基因组数据，又更新描述流内容的元数据。后一种类型的数据的一个示例是接收端使用的索引信息，以使得即使对部分传输的内容也能够进行选择性访问。传输格式结构有助于规范传输格式（即通过互联网传输的 MPEG-G 流）和文件格式（即存储在磁盘上的 MPEG-G 文件）之间的转换规范过程。</p>\n<p>传输格式结构有助于规范传输格式（即通过互联网传输的 MPEG-G 流）和文件格式（即存储在磁盘上的 MPEG-G 文件）之间的转换规范过程。</p>\n<h3 id=\"Part-2：基因组信息编码\"><a href=\"#Part-2：基因组信息编码\" class=\"headerlink\" title=\"Part 2：基因组信息编码\"></a>Part 2：基因组信息编码</h3><p>基因组记录根据其读数与一个或多个参考序列的主要比对结果分为六个数据类，如Table 1 所示。记录根据与所用参考序列的不匹配类型进行分类用于对齐。</p>\n<p>为了进一步提高压缩效率，集群基因组记录中包含的信息被分割到描述符流中。将聚类基因组记录中包含的信息拆分为描述符流的概念允许根据每个描述符流的统计属性定制编码参数。</p>\n<table align=\"center\" style=\"text-align: center\">\n    <tbody>\n        <tr>\n            <td> 类型 </td>\n            <td>语义</td>\n        </tr>\n        <tr>\n            <td>P</td>\n            <td>读取与参考序列完全匹配。</td>\n        </tr>\n        <tr>\n            <td>N</td>\n            <td>仅包含未知碱基的错配读数。</td>\n        </tr>\n        <tr>\n            <td>M</td>\n            <td>读数中至少包含一个替换碱基，也可能包含未知碱基，但不包含插入碱基、删除碱基和剪切碱基。</td>\n        </tr>\n        <tr>\n            <td>I</td>\n            <td>读数至少包含一个插入、缺失或剪切碱基，也可能包含未知碱基或置换。</td>\n        </tr>\n        <tr>\n            <td>HM</td>\n            <td>仅映射一个读数的半映射对。</td>\n        </tr>\n        <tr>\n            <td>U</td>\n            <td>未映射读数。</td>\n        </tr>\n        <tr>\n            <td colspan=2>Table 1: MPEG-G中定义的数据类型</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4 id=\"原始测序数据的压缩模式\"><a href=\"#原始测序数据的压缩模式\" class=\"headerlink\" title=\"原始测序数据的压缩模式\"></a>原始测序数据的压缩模式</h4><p>原始测序数据可以根据两种不同的方法进行编码，具体取决于当前的应用：</p>\n<p><strong>高压缩比和索引</strong>：通过利用基因组序列数据的高冗余度来实现高压缩比。这使得能够使用众所周知的压缩技术，例如相对于已编码数据的序列的差分编码。这种方法实现了最大压缩比，但需要整个数据集的可用性以及一些可能影响压缩延迟的预处理阶段。原始基因组序列的差异编码依赖于多个序列之间共享的共同模式（即“签名”）的识别。这些常见模式仅与每次读取的特定核苷酸（即“残差”）一起编码一次。这种签名的存在使得能够实现索引方案，利用该索引方案可以通过模式匹配算法来搜索压缩数据。例如，该模式适用于原始测序数据的长期存储。可以使用 MPEG-G 中针对此操作模式定义的解码器语法来表示数据输出的预处理技术的示例包括 ORCOM [13]、HARC [14]、FaStore [7] 中提出的技术，并且一般而言，所有（未来）基于常见模式对读取进行聚类的预处理技术。</p>\n<p><strong>低延迟</strong>：当低流延迟比压缩比具有更高的优先级时，MPEG-G 还支持“高吞吐量”压缩方法，一旦基因组序列可用，就可以应用该方法。在这种情况下，在实际编码之前不需要对整个数据集进行数据预处理。这种方法支持流式传输场景，其中基因组数据一旦可用（甚至可能在测序过程完成之前）就需要从测序设施传输到远程设备。</p>\n<h4 id=\"质量值的压缩模式\"><a href=\"#质量值的压缩模式\" class=\"headerlink\" title=\"质量值的压缩模式\"></a>质量值的压缩模式</h4><p>由于其更高的熵和更大的字母表，质量值已被证明比读数更难压缩。此外，有证据表明质量值本质上是有噪声的，并且使用它们的下游应用程序以不同的启发式方式这样做。因此，质量值的量化不仅可以显着减轻存储需求，还可以提供与使用未压缩数据实现的性能相当（有时甚至优于）的变体调用性能。这甚至可以通过每个质量分数 0.5 位而不是无损压缩所需的 3 位来实现，大约</p>\n<p>因此，在MPEG-G中，质量值可以以无损方式或以量化方式编码。当对质量值进行无损编码时，可以在实际算术编码之前对质量值应用若干变换（另请参见下面的熵编码过程的步骤2）。这些变换包括差分编码、游程编码和名为“匹配编码”的变换，可以将其视为改进的 Lempel-Ziv 方案 [17]。</p>\n<p>不过质量值的量化可以导致熵编码后比特流大小的显着减小。然而，为了促进最小化任何量化效应，MPEG-G 标准提供了多种机制来允许编码器执行量化方案的细粒度选择。</p>\n<p>在未对齐读取的情况下，符合 MPEG-G 的编码器可以自由选择任何有益的量化方案。这包括最近发表的研究的量化方案，例如[18,19,20,9]。所使用的具体量化方案通过质量值码本通知给解码器。量化的质量值作为该质量值码本中的质量值索引被用信号发送给解码器。</p>\n<p>在对齐读取的情况下，MPEG-G 引入了一个额外的维度来微调质量值量化：可以根据基因组位置（即每个基因座）选择码本 [10]。因此，每个基因组位置一个质量值密码本标识符与质量值索引一起被发送到解码器。</p>\n<p>在这两种情况下，在熵编码之前，质量值索引被分成每个质量值码本的单独流。最后，MPEG-G 编码器还可以通过为每个数据类以及每个访问单元选择不同的码本来调整量化。</p>\n<h4 id=\"读取标识符的压缩模式\"><a href=\"#读取标识符的压缩模式\" class=\"headerlink\" title=\"读取标识符的压缩模式\"></a>读取标识符的压缩模式</h4><p>读取标识符被分解为一系列标记，这些标记可以是三种主要类型：字符串、数字和单个字符。读取标识符表示为相对于先前解码的读取标识符之一的一组差异和匹配。这种方法不依赖于任何测序制造商的实施，并且仅假设在同一测序运行中，读取标识符的结构大部分是恒定的。请注意，这种标识符压缩方法（或其变体）先前已在压缩器中使用，例如 SamComp [21]、Quip [22]、DeeZ [8] 和 FaStore [7] 等。</p>\n<h4 id=\"参考序列的压缩模式\"><a href=\"#参考序列的压缩模式\" class=\"headerlink\" title=\"参考序列的压缩模式\"></a>参考序列的压缩模式</h4><p>MPEG-G支持使用FASTA格式和MPEG-G压缩格式的参考序列。参考序列同样可以作为数据集嵌入同一个MPEG-G文件中。也可以使用可选的外部参考序列（比如，不包含在比特流中的序列）。MPEG-G规定了如何使用URI和校验码来保证外部参考序列的确定性。</p>\n<p>MPEG-G 中的参考序列可以编码为独立数据集或相对于另一个参考序列的差异。在第一种情况下，参考序列被编码为属于数据类 U（未映射读取）的基因组记录序列，并使用针对未映射序列数据描述的方法进行编码。在相对于另一个参考序列进行差分编码的情况下，使用与用于对齐数据的相同方法。在这种情况下，属于数据类 P、N、M、I 和 U 的基因组记录可用于表示编码组件的片段。在差异编码的情况下，用作对一个或多个其他基因组序列进行编码的参考的参考序列不需要是真实的基因组序列，而是可以被合成以提高压缩性能。当使用公共参考（不一定是集合的序列之一）压缩基因组序列集合时，这可能会很有帮助。</p>\n<h4 id=\"熵编码\"><a href=\"#熵编码\" class=\"headerlink\" title=\"熵编码\"></a>熵编码</h4><p>将不同类型的数据存储在单独的描述符流中可以显着提高压缩效率。可以利用每个描述符的不同统计属性来定义用于熵编码的不同源模型。通过根据每个源模型的统计特性采用适当的上下文自适应概率模型来提高压缩效率。</p>\n<p>为了压缩异构描述符集，MPEG-G 指定使用上下文自适应二进制算术编码 (CABAC) [23]，如流行的视频编码标准和基因组数据压缩解决方案 AFRESh 和 AQUa [24, 25] 中所使用的那样。通过选择这种高效的算术编码器，可以显着简化兼容编解码器的实现，因为目前可以使用硬件和软件中的各种实现。</p>\n<p>压缩过程由 5 个步骤组成（见Figure 5）：输入数据解析、值转换、值二值化、上下文选择和 CABAC。</p>\n<p><img src=\"/../gallery/papers/introduction_to_MPEG_G/fig5.jpg\" alt=\"Figure 5\"></p>\n<center>MPEG-G 中使用的上下文自适应熵编码</center>\n\n<p>在步骤 1（输入数据解析）中，描述符流被解析为值序列。如果有利的话，描述符流中包含的数据可以分成多个子序列。每个结果子序列在步骤 2 到 5 中单独处理。</p>\n<p>在步骤 2（值转换）中，将可选的转换（序列）应用于步骤 1 生成的值。某些转换会生成其他数据流。每个生成的变换子序列在步骤 3 到 5 中分别进行处理。</p>\n<p>在步骤 3（值二值化）中，不同变换子序列中的值被转换为二值化表示（即一组位）。为了允许步骤 5 中的有效压缩，变换和二值化的组合应该以这样的方式选择：二值化的每个比特的值尽可能可预测。二值化流用作步骤 5 的输入。</p>\n<p>在步骤 4（上下文选择）中，识别将在编码步骤（步骤 5）期间使用的上下文集。每个上下文集包含对一个输入值进行编码所需的上下文。上下文选择步骤的目标是选择期望尽可能类似于步骤 3 生成的二值化表示中的比特分布的上下文集。所选上下文的流充当熵编码器的支持值步骤 5.</p>\n<p>在步骤5（CABAC）中，使用在步骤4中或在旁路模式中选择的上下文集，使用表示等概率的非自适应上下文，对步骤3中生成的二值化表示的仓进行编码。</p>\n<h4 id=\"解码过程\"><a href=\"#解码过程\" class=\"headerlink\" title=\"解码过程\"></a>解码过程</h4><p>MPEG-G规范不仅定义了压缩基因组测序数据的语法和语义，还定义了确定性解码过程。</p>\n<p>MPEG-G 解码过程的规范输入是称为数据单元的数据结构的串联。根据传送数据的类型，数据单元可以分为三种类型。<code>类型 0 </code>的数据单元封装一个或多个参考序列的解码表示，<code>类型 1 </code>的数据单元包含在称为<strong>参数集</strong>的结构中的解码过程中使用的参数，<code>类型 2 </code>的数据单元包含一个<code>Access Unit</code>。</p>\n<p>类型 0 和 1 的数据单元在类型 2 的数据单元的解码过程中使用，但不产生任何规范的输出。这些数据单元携带的数据由解码过程以依赖于实现的方式进行管理。访问单元的解码过程以包含原始或对齐读取的访问单元的 MPEG-G 记录的形式或以包含压缩参考序列或部分的访问单元的原始参考结构的形式产生规范输出。其中。 MPEG-G 记录可以被视为改进的 SAM 记录：在 MPEG-G 中，读取对通常编码在同一记录中，除非满足某些条件，例如配对距离高于用户定义的阈值，或者配对映射到不同的参考序列。分割读取对的决定由编码器做出，并且使用适当的描述符将配对信息传输到解码器以用于该对中的每个读取。解码过程是完全指定的，以便所有符合标准第 2 部分的解码器将产生相同的解码输出。规范解码过程包括数据结构的所有层次结构，从 MPEG-G 文件中包含的复用比特流或流场景中的数据流，到描述符块再到规范输出。解码过程的简化图如Figure 6 所示。</p>\n<p><img src=\"/../gallery/papers/introduction_to_MPEG_G/fig6.jpg\" alt=\"Figure 6\"></p>\n<center>MPEG-G 数据单元转化为规范输出的简化版解码流程</center>\n\n<h3 id=\"Part-3：元数据和APIs\"><a href=\"#Part-3：元数据和APIs\" class=\"headerlink\" title=\"Part 3：元数据和APIs\"></a>Part 3：元数据和APIs</h3><h4 id=\"隐私规则的应用\"><a href=\"#隐私规则的应用\" class=\"headerlink\" title=\"隐私规则的应用\"></a>隐私规则的应用</h4><p>MPEG-G 文件中编码的数据可以链接到多个所有者定义的隐私规则，这些规则对数据访问和使用施加限制。隐私规则在 XACML（可扩展访问控制标记语言）3.0 版（OASIS 标准 [26]）中指定。</p>\n<p>MPEG-G 文件格式包括在 MPEG-G 层次结构的大多数级别（包括数据集组、数据集、描述符流和访问单元级别）可用的特定容器中提供的保护信息。除了应用于它们所引用的信息的隐私规则之外，这些保护容器还提供了管理信息的机密性和完整性的机制。具体来说，有关隐私规则的信息仅在数据集组和数据集级别可用。例如，隐私规则可以指定对与识别阿尔茨海默病倾向相关的特定区域的访问控制。通过使用加密技术与隐私规则相结合，可以有效地保护基因组数据免受未经授权的访问。因此，只有获得规则授权的用户才能对受保护区域进行操作。</p>\n<h4 id=\"序列数据和元数据的加密\"><a href=\"#序列数据和元数据的加密\" class=\"headerlink\" title=\"序列数据和元数据的加密\"></a>序列数据和元数据的加密</h4><p>MPEG-G 支持在其逻辑数据结构层次结构中的不同级别上对基因组信息进行加密。保护信息指定如何对同一级别的数据结构以及紧接其下的一层的保护信息容器进行加密。此信息使用 XML 加密 v1.1 标准 (<a href=\"http://www.w3.org/TR/xmlenc-core1\">www.w3.org/TR/xmlenc-core1</a>) 表示。另一方面，可以通过使用 XML Signature v1.1 (<a href=\"http://www.w3.org/TR/xmldsig-core1\">www.w3.org/TR/xmldsig-core1</a>) 的电子签名来提供身份验证和完整性。</p>\n<p>加密不仅可以用于基因组记录中包含的“低级”详细测序数据和元数据，还可以用于数据集组和数据集层次结构级别可用的“高级”元数据。为此，MPEG-G 提供了使用 XML v1.1 (<a href=\"http://www.w3.org/TR/xml11\">www.w3.org/TR/xml11</a>) 指定的元数据信息结构，以及针对这些级别的一组元素。它包括元数据元素的最小核心集（例如数据集组的标题和样本，或数据集的标题和项目中心）。用户和应用程序可以通过包含额外的信息元素以标准化方式扩展该核心集。</p>\n<p>此外，元数据配置文件是用标准中提供的机制指定的元数据集的特定子集。指定的元数据简档可以对应于在MPEG-G中指定或使用的公共元数据集，例如来自欧洲基因组-现象档案库(EGA)和国家癌症研究所(NCI)基因组数据共享(GDC)的元数据集。元数据配置文件包括核心元素的子集和使用扩展机制指定的一组新元素。</p>\n<h3 id=\"MPEG-G-基因组信息数据库\"><a href=\"#MPEG-G-基因组信息数据库\" class=\"headerlink\" title=\"MPEG-G 基因组信息数据库\"></a>MPEG-G 基因组信息数据库</h3><p>数据库中包含的测序数据根据：i) 实验类型，ii) 测序生物体，以及 iii) 采用的测序技术进行分类。该数据库包括与全基因组测序、宏基因组测序、RNA测序和癌症测序实验相关的数据。 WGS 数据通过模拟人类 WGS 数据得到进一步扩展。此外，数据库中还包含来自多种类群（即动物界、植物界、真菌、细菌和病毒）的数据：黑腹果蝇和智人（动物界）、可可（植物界）、酿酒酵母（真菌）、不同菌株大肠杆菌和铜绿假单胞菌（细菌）和 ΦX174（病毒）。最后，使用不同的测序技术生成数据：i) 边合成边测序（Illumina&#x2F;Solexa Genome Analyzer、Illumina Genome Analyzer IIx、Illumina MiSeq、Illumina HiSeq 2000、Illumina HiSeq X Ten、Illumina NovaSeq 6000）；ii) 单分子实时测序（Pacific Biosciences SMRT (PacBio))；iii) 纳米孔测序（Oxford Nanopore MinION）； iv) 离子半导体测序（Ion Torrent PGM）。</p>\n<p>可以通过 <a href=\"https://github.com/voges/mpeg-g-gidb\">https://github.com/voges/mpeg-g-gidb</a> 访问该数据库。</p>\n<h3 id=\"MPEG-G-文档\"><a href=\"#MPEG-G-文档\" class=\"headerlink\" title=\"MPEG-G 文档\"></a>MPEG-G 文档</h3><p>由于 MPEG-G 标准的规模和广度，我们建议读者参考描述它的官方文档。当 ISO 和 IEC 发布最终版本时，这些文件将公开。中间公共文档可在 MPEG 网站上专门介绍 MPEG-G 的部分 (<a href=\"https://mpeg.chiariglione.org/standards/mpeg-g\">https://mpeg.chiariglione.org/standards/mpeg-g</a>) 以及 MPEG-G 门户网站 (<a href=\"https://mpeg-g.org/\">https://mpeg-g.org</a>) 上找到。</p>\n","text":"对ISO的新型基因信息编码标准MPEG-G的简介摘要MPEG-G 的标准化是一项国际化的努力成果，它定义了一种压缩数据的格式，用于处理、传输和共享大规模的基因数...","permalink":"/post/introduction_to_MPEG-G","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"论文翻译","slug":"论文翻译","count":1,"path":"api/categories/论文翻译.json"}],"tags":[{"name":"生物信息学","slug":"生物信息学","count":3,"path":"api/tags/生物信息学.json"},{"name":"MPEG-G","slug":"MPEG-G","count":1,"path":"api/tags/MPEG-G.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AF%B9ISO%E7%9A%84%E6%96%B0%E5%9E%8B%E5%9F%BA%E5%9B%A0%E4%BF%A1%E6%81%AF%E7%BC%96%E7%A0%81%E6%A0%87%E5%87%86MPEG-G%E7%9A%84%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">对ISO的新型基因信息编码标准MPEG-G的简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%91%98%E8%A6%81\"><span class=\"toc-text\">摘要</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">结果</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E5%9B%A0%E4%BF%A1%E6%81%AF%E8%A1%A8%E7%A4%BA\"><span class=\"toc-text\">基因信息表示</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%8B%E7%BC%A9%E8%83%BD%E5%8A%9B\"><span class=\"toc-text\">压缩能力</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%8B%E7%BC%A9%E4%B9%8B%E5%A4%96%E7%9A%84MPEG-G\"><span class=\"toc-text\">压缩之外的MPEG-G</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%8B%E7%BC%A9%E6%95%B0%E6%8D%AE%E7%9A%84%E9%80%89%E6%8B%A9%E6%80%A7%E8%AE%BF%E9%97%AE\"><span class=\"toc-text\">压缩数据的选择性访问</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E6%B5%81%E5%8C%96\"><span class=\"toc-text\">数据流化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E5%9B%A0%E7%BB%84%E7%A0%94%E7%A9%B6%E7%9A%84%E8%81%9A%E5%90%88%E4%BB%A5%E5%8F%8A%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%92%8C%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A2%9E%E9%87%8F%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">基因组研究的聚合以及测序数据和元数据的增量更新</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9A%90%E7%A7%81%E8%A7%84%E5%88%99%E7%9A%84%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">隐私规则的执行</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E5%BA%8F%E5%88%97%E6%95%B0%E6%8D%AE%E5%92%8C%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E5%8F%AF%E9%80%89%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">对序列数据和元数据的可选加密</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%8B%E7%BC%A9%E5%9F%9F%E4%B8%AD%E5%9F%BA%E5%9B%A0%E7%BB%84%E7%89%87%E6%AE%B5%E7%9A%84%E6%B3%A8%E9%87%8A%E5%92%8C%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">压缩域中基因组片段的注释和连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8E%E7%8E%B0%E6%9C%89%E4%B8%BB%E8%A6%81%E6%8A%80%E6%9C%AF%E5%92%8C%E6%A0%BC%E5%BC%8F%E7%9A%84%E4%BA%92%E6%93%8D%E4%BD%9C%E6%80%A7\"><span class=\"toc-text\">与现有主要技术和格式的互操作性</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MPEG-G-%E5%AE%9E%E7%8E%B0%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">MPEG-G 实现框架</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E8%BD%AF%E4%BB%B6\"><span class=\"toc-text\">参考软件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%80%E8%87%B4%E6%80%A7\"><span class=\"toc-text\">一致性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#MPEG-G%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">MPEG-G基因组信息数据库</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A8%E8%AE%BA\"><span class=\"toc-text\">讨论</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Part-1%EF%BC%9A%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%BF%A1%E6%81%AF%E7%9A%84%E4%BC%A0%E8%BE%93%E5%92%8C%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">Part 1：基因组信息的传输和存储</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">文件格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BC%A0%E8%BE%93%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">传输格式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Part-2%EF%BC%9A%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%BF%A1%E6%81%AF%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">Part 2：基因组信息编码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E5%A7%8B%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E7%9A%84%E5%8E%8B%E7%BC%A9%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">原始测序数据的压缩模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B4%A8%E9%87%8F%E5%80%BC%E7%9A%84%E5%8E%8B%E7%BC%A9%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">质量值的压缩模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%BB%E5%8F%96%E6%A0%87%E8%AF%86%E7%AC%A6%E7%9A%84%E5%8E%8B%E7%BC%A9%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">读取标识符的压缩模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E5%BA%8F%E5%88%97%E7%9A%84%E5%8E%8B%E7%BC%A9%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">参考序列的压缩模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%86%B5%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">熵编码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E7%A0%81%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">解码过程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Part-3%EF%BC%9A%E5%85%83%E6%95%B0%E6%8D%AE%E5%92%8CAPIs\"><span class=\"toc-text\">Part 3：元数据和APIs</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9A%90%E7%A7%81%E8%A7%84%E5%88%99%E7%9A%84%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">隐私规则的应用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BA%8F%E5%88%97%E6%95%B0%E6%8D%AE%E5%92%8C%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">序列数据和元数据的加密</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MPEG-G-%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">MPEG-G 基因组信息数据库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MPEG-G-%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">MPEG-G 文档</span></a></li></ol></li></ol></li></ol>","author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"算法设计与分析-算法实现5","uid":"b7f65afed6da02513803114eb0a78e80","slug":"算法设计与分析-算法实现5","date":"2023-12-10T23:09:35.000Z","updated":"2023-12-11T07:09:54.729Z","comments":true,"path":"api/articles/算法设计与分析-算法实现5.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/algo.png","text":"算法实现5 pythoninput_data = [1,2,3,7] def solve_24(nums): # 用于计算两数运算结果的函数 def calcu...","permalink":"/post/算法设计与分析-算法实现5","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"基础","slug":"基础","count":33,"path":"api/categories/基础.json"},{"name":"作业","slug":"基础/作业","count":22,"path":"api/categories/基础/作业.json"},{"name":"算法","slug":"基础/作业/算法","count":22,"path":"api/categories/基础/作业/算法.json"}],"tags":[{"name":"作业","slug":"作业","count":24,"path":"api/tags/作业.json"},{"name":"算法","slug":"算法","count":24,"path":"api/tags/算法.json"}],"author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SVM 的求解","uid":"926471e4eff9b83304d4f06ae8b35be9","slug":"SVM 的求解","date":"2023-12-03T05:50:42.000Z","updated":"2023-12-06T14:47:50.758Z","comments":true,"path":"api/articles/SVM 的求解.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/ml.png","text":" TIP 给定下列3个样本点，请计算硬间隔SVM分类器 3 1 1 1 -1 -1 首先，我们需要定义SVM的目标函数和约束条件。我们假设SVM的分类决策函数是...","permalink":"/post/SVM 的求解","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"基础","slug":"基础","count":33,"path":"api/categories/基础.json"},{"name":"机器学习","slug":"基础/机器学习","count":6,"path":"api/categories/基础/机器学习.json"}],"tags":[{"name":"模式识别","slug":"模式识别","count":6,"path":"api/tags/模式识别.json"},{"name":"机器学习","slug":"机器学习","count":6,"path":"api/tags/机器学习.json"}],"author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}