{"title":"进程同步经典问题","uid":"e14beeee054107e61818821b5c2d1c74","slug":"进程同步经典问题","date":"2023-03-25T13:53:16.000Z","updated":"2023-11-21T07:57:04.763Z","comments":true,"path":"api/articles/进程同步经典问题.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/os.jpg","content":"<h2 id=\"信号量\"><a href=\"#信号量\" class=\"headerlink\" title=\"信号量\"></a>信号量</h2><p>信号量机制是一种用于解决互斥和同步问题的机制，包括两个原语<code>wait(S)</code>和<code>signal(S)</code>，也可以记为<code>P操作</code>和<code>V操作</code>。</p>\n<h2 id=\"管程\"><a href=\"#管程\" class=\"headerlink\" title=\"管程\"></a>管程</h2><p>使用一个数据结构S来描述共享资源数，并包含对该数据结构的一组操作。</p>\n<h2 id=\"生产者-消费者问题\"><a href=\"#生产者-消费者问题\" class=\"headerlink\" title=\"生产者-消费者问题\"></a>生产者-消费者问题</h2><div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DBD7CAEE\">semaphore mutex </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">semaphore empty </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> n</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">semaphore full </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #80A665\">producer</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">()</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">{</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">)</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">{</span></span>\n<span class=\"line\"><span style=\"color: #758575DD\">        // ...produce data</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">P</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">empty</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">P</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">mutex</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #758575DD\">        // ...add data to buffer</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">V</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">mutex</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">V</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">full</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #666666\">}</span></span>\n<span class=\"line\"><span style=\"color: #666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #80A665\">consumer</span><span style=\"color: #666666\">()</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">{</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">)</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">{</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">P</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">full</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">P</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">mutex</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #758575DD\">        // ...get data from buffer</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">V</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">mutex</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">V</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">empty</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #758575DD\">        // ...consume data</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #666666\">}</span></span>\n<span class=\"line\"><span style=\"color: #666666\">}</span></span></code></pre></div><h2 id=\"读者-写者问题\"><a href=\"#读者-写者问题\" class=\"headerlink\" title=\"读者-写者问题\"></a>读者-写者问题</h2><div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #CB7676\">int</span><span style=\"color: #DBD7CAEE\"> count </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">;</span><span style=\"color: #758575DD\"> // 读者数量</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">semaphore mutex</span><span style=\"color: #666666\">=</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">semaphore rw</span><span style=\"color: #666666\">=</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">semaphore w</span><span style=\"color: #666666\">=</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">;</span><span style=\"color: #DBD7CAEE\"> </span></span>\n<span class=\"line\"><span style=\"color: #758575DD\">// w是用来保证写优先的</span></span>\n<span class=\"line\"><span style=\"color: #758575DD\">// 如果没有将会导师读优先，写进程会存在“饿死”现象 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #80A665\">writer</span><span style=\"color: #666666\">()</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">{</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">)</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">{</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">P</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">w</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">P</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">rw</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #758575DD\">        // ...writing</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">V</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">rw</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">V</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">w</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #666666\">}</span></span>\n<span class=\"line\"><span style=\"color: #666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #80A665\">reader</span><span style=\"color: #666666\">()</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">{</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">while</span><span style=\"color: #666666\">(</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">)</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">{</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">P</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">w</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">P</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">mutex</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #4D9375\">if</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">count </span><span style=\"color: #CB7676\">==</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">            </span><span style=\"color: #80A665\">P</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">rw</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        count </span><span style=\"color: #CB7676\">++</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">V</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">mutex</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">V</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">w</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #758575DD\">        // ...reading</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">P</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">mutex</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        count </span><span style=\"color: #CB7676\">--</span><span style=\"color: #666666\">;</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #4D9375\">if</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">count </span><span style=\"color: #CB7676\">==</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">            </span><span style=\"color: #80A665\">V</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">rw</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #80A665\">V</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">mutex</span><span style=\"color: #666666\">);</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #666666\">}</span></span>\n<span class=\"line\"><span style=\"color: #666666\">}</span></span></code></pre></div>","text":"信号量信号量机制是一种用于解决互斥和同步问题的机制，包括两个原语wait(S)和signal(S)，也可以记为P操作和V操作。 管程使用一个数据结构S来描述共享...","permalink":"/post/进程同步经典问题","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Review","slug":"Review","count":7,"path":"api/tags/Review.json"},{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E5%8F%B7%E9%87%8F\"><span class=\"toc-text\">信号量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%A1%E7%A8%8B\"><span class=\"toc-text\">管程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%9F%E4%BA%A7%E8%80%85-%E6%B6%88%E8%B4%B9%E8%80%85%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">生产者-消费者问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%BB%E8%80%85-%E5%86%99%E8%80%85%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">读者-写者问题</span></a></li></ol>","author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"图像特征","uid":"ffa3c8772fdf3309434ff546ef79c450","slug":"图像特征","date":"2023-04-02T13:09:32.000Z","updated":"2023-11-21T07:50:29.085Z","comments":true,"path":"api/articles/图像特征.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/algo.png","text":"SIFT、HOG特征SIFT特征Scale Invariant Feature Transform ，又称尺度不变特征变换。SIFT特征对旋转、尺度缩放、亮度变...","permalink":"/post/图像特征","photos":[],"count_time":{"symbolsCount":404,"symbolsTime":"1 mins."},"categories":[{"name":"图形图像","slug":"图形图像","count":1,"path":"api/categories/图形图像.json"}],"tags":[{"name":"图像处理","slug":"图像处理","count":1,"path":"api/tags/图像处理.json"},{"name":"OpenCV","slug":"OpenCV","count":1,"path":"api/tags/OpenCV.json"}],"author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"软件工程中的开发模型","uid":"cfd4ec52764f9243a80a5ef9b48d3349","slug":"软件工程","date":"2023-03-23T16:41:13.000Z","updated":"2023-11-21T07:57:09.360Z","comments":true,"path":"api/articles/软件工程.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/os.jpg","text":"软件开发生命周期（software development lifecycle (SDLC) ）软件的产生直到报废的生命周期，包括：问题定义、可行性分析、需求分...","permalink":"/post/软件工程","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"基础","slug":"基础","count":26,"path":"api/categories/基础.json"}],"tags":[{"name":"Review","slug":"Review","count":7,"path":"api/tags/Review.json"},{"name":"软件工程","slug":"软件工程","count":1,"path":"api/tags/软件工程.json"}],"author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}