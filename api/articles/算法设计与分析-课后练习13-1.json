{"title":"算法设计与分析-课后练习13-1","uid":"936c542a29ffbd776c8edaf03bb7198c","slug":"算法设计与分析-课后练习13-1","date":"2023-11-21T02:02:40.000Z","updated":"2023-11-21T10:03:14.929Z","comments":true,"path":"api/articles/算法设计与分析-课后练习13-1.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/algo.png","content":"<h1 id=\"课后练习13-1\"><a href=\"#课后练习13-1\" class=\"headerlink\" title=\"课后练习13-1\"></a>课后练习13-1</h1><img src=\"/gallery/algo/课后练习13-1.png\" width=\"700\">\n\n<p>首先计算斐波那契数列</p>\n<div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">def</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #80A665\">fibonacci</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">n</span><span style=\"color: #666666\">):</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">if</span><span style=\"color: #DBD7CAEE\"> n </span><span style=\"color: #CB7676\">==</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">0</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">or</span><span style=\"color: #DBD7CAEE\"> n </span><span style=\"color: #CB7676\">==</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">:</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #4D9375\">return</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">1</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">return</span><span style=\"color: #DBD7CAEE\"> fibonacci</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">n</span><span style=\"color: #CB7676\">-</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">)</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">+</span><span style=\"color: #DBD7CAEE\"> fibonacci</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">n</span><span style=\"color: #CB7676\">-</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">fibonacci_nums </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">[]</span></span>\n<span class=\"line\"><span style=\"color: #4D9375\">for</span><span style=\"color: #DBD7CAEE\"> i </span><span style=\"color: #4D9375\">in</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #B8A965\">range</span><span style=\"color: #666666\">(</span><span style=\"color: #4C9A91\">8</span><span style=\"color: #666666\">):</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    fibonacci_nums</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">append</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">fibonacci</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">))</span></span></code></pre></div><div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DBD7CAEE\">fibonacci_nums</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #dbd7caee\">[1, 1, 2, 3, 5, 8, 13, 21]</span></span></code></pre></div><p>下面生成这组字符的哈夫曼树</p>\n<div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DBD7CAEE\">fib_num_chars </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">[]</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">base_char </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #C98A7D99\">&#39;</span><span style=\"color: #C98A7D\">a</span><span style=\"color: #C98A7D99\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #4D9375\">for</span><span style=\"color: #DBD7CAEE\"> i </span><span style=\"color: #4D9375\">in</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #B8A965\">range</span><span style=\"color: #666666\">(</span><span style=\"color: #B8A965\">len</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">fibonacci_nums</span><span style=\"color: #666666\">)):</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    fib_num_chars</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">append</span><span style=\"color: #666666\">((</span><span style=\"color: #B8A965\">chr</span><span style=\"color: #666666\">(</span><span style=\"color: #B8A965\">ord</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">base_char</span><span style=\"color: #666666\">)</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">+</span><span style=\"color: #DBD7CAEE\"> i</span><span style=\"color: #666666\">),</span><span style=\"color: #DBD7CAEE\"> fibonacci_nums</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">i</span><span style=\"color: #666666\">],</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">))</span></span></code></pre></div><div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #758575DD\"># 哈夫曼树节点</span></span>\n<span class=\"line\"><span style=\"color: #CB7676\">class</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #5DA994\">TreeNode</span><span style=\"color: #666666\">:</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #CB7676\">def</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #B8A965\">__init__</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">self</span><span style=\"color: #666666\">,</span><span style=\"color: #DBD7CAEE\"> data</span><span style=\"color: #666666\">,</span><span style=\"color: #DBD7CAEE\"> value</span><span style=\"color: #666666\">):</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #C99076\">self</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">data </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> data</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #C99076\">self</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">value </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> value</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #C99076\">self</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">left </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #C99076\">self</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">right </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span></span>\n<span class=\"line\"><span style=\"color: #CB7676\">def</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #80A665\">insert_tree</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">tree_node</span><span style=\"color: #666666\">:</span><span style=\"color: #DBD7CAEE\">TreeNode</span><span style=\"color: #666666\">):</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    tree_val </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> tree_node</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">value</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">for</span><span style=\"color: #DBD7CAEE\"> index </span><span style=\"color: #4D9375\">in</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #B8A965\">range</span><span style=\"color: #666666\">(</span><span style=\"color: #B8A965\">len</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">fib_num_chars</span><span style=\"color: #666666\">)):</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #4D9375\">if</span><span style=\"color: #DBD7CAEE\"> fib_num_chars</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">index</span><span style=\"color: #666666\">][</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">&gt;</span><span style=\"color: #DBD7CAEE\"> tree_val</span><span style=\"color: #666666\">:</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">            fib_num_chars</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">insert</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">index</span><span style=\"color: #666666\">,</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">(</span><span style=\"color: #C98A7D99\">&#39;&#39;</span><span style=\"color: #666666\">,</span><span style=\"color: #DBD7CAEE\"> tree_val</span><span style=\"color: #666666\">,</span><span style=\"color: #DBD7CAEE\"> root</span><span style=\"color: #666666\">))</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">            </span><span style=\"color: #4D9375\">break</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #758575DD\"># 斐波那契数列按照升序排列，故可以直接取其首端两个值构建哈夫曼树节点</span></span>\n<span class=\"line\"><span style=\"color: #4D9375\">while</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #B8A965\">len</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">fib_num_chars</span><span style=\"color: #666666\">)</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">&gt;</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">:</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    minst1 </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> fib_num_chars</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">pop</span><span style=\"color: #666666\">(</span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    minst2 </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> fib_num_chars</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">pop</span><span style=\"color: #666666\">(</span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">if</span><span style=\"color: #DBD7CAEE\"> minst1</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">and</span><span style=\"color: #DBD7CAEE\"> minst2</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">:</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        m1_t_node </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> TreeNode</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">minst1</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">],</span><span style=\"color: #DBD7CAEE\"> minst1</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">])</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        m2_t_node </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> TreeNode</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">minst2</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">],</span><span style=\"color: #DBD7CAEE\"> minst2</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">])</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root_val </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> minst1</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">+</span><span style=\"color: #DBD7CAEE\"> minst2</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">]</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> TreeNode</span><span style=\"color: #666666\">(</span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">,</span><span style=\"color: #DBD7CAEE\"> root_val</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">left </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> m1_t_node</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">right </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> m2_t_node</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        insert_tree</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">root</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">elif</span><span style=\"color: #DBD7CAEE\"> minst1</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">not</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">and</span><span style=\"color: #DBD7CAEE\"> minst2</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">not</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">:</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root_val </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> minst1</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">+</span><span style=\"color: #DBD7CAEE\"> minst2</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">]</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> TreeNode</span><span style=\"color: #666666\">(</span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">,</span><span style=\"color: #DBD7CAEE\"> root_val</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">left </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> minst1</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">right </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> minst2</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        insert_tree</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">root</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">elif</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">minst1</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">and</span><span style=\"color: #DBD7CAEE\"> minst2</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">not</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">)</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">or</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">minst1</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">not</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">and</span><span style=\"color: #DBD7CAEE\"> minst2</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">):</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        tree_minst </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        char_minst </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #4D9375\">if</span><span style=\"color: #DBD7CAEE\"> minst1</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">not</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">:</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">            tree_minst </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> minst1</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">            char_minst </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> minst2</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span><span style=\"color: #4D9375\">if</span><span style=\"color: #DBD7CAEE\"> minst2</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">not</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">:</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">            tree_minst </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> minst2</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">            char_minst </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> minst1</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        char_node </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> TreeNode</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">char_minst</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">],</span><span style=\"color: #DBD7CAEE\"> char_minst</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">])</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root_val </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> char_minst</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #CB7676\">+</span><span style=\"color: #DBD7CAEE\"> tree_minst</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">1</span><span style=\"color: #666666\">]</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> TreeNode</span><span style=\"color: #666666\">(</span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">,</span><span style=\"color: #DBD7CAEE\"> root_val</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">left </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> tree_minst</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        root</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">right </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> char_node</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        insert_tree</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">root</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">huffman_tree </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> fib_num_chars</span><span style=\"color: #666666\">[</span><span style=\"color: #4C9A91\">0</span><span style=\"color: #666666\">][</span><span style=\"color: #4C9A91\">2</span><span style=\"color: #666666\">]</span></span></code></pre></div><p>哈夫曼树生成后遍历哈夫曼树生成哈夫曼编码</p>\n<div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DBD7CAEE\">huffman_codes </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">&#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #CB7676\">def</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #80A665\">traverse</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">tree_node</span><span style=\"color: #666666\">:</span><span style=\"color: #DBD7CAEE\">TreeNode</span><span style=\"color: #666666\">,</span><span style=\"color: #DBD7CAEE\"> code</span><span style=\"color: #CB7676\">=</span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">):</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">if</span><span style=\"color: #DBD7CAEE\"> code </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">:</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        code </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">[]</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">if</span><span style=\"color: #DBD7CAEE\"> tree_node</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">data </span><span style=\"color: #CB7676\">is</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #4D9375\">None</span><span style=\"color: #666666\">:</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        traverse</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">tree_node</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">left</span><span style=\"color: #666666\">,</span><span style=\"color: #DBD7CAEE\"> code </span><span style=\"color: #CB7676\">+</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">[</span><span style=\"color: #C98A7D99\">&#39;</span><span style=\"color: #C98A7D\">0</span><span style=\"color: #C98A7D99\">&#39;</span><span style=\"color: #666666\">])</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        traverse</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">tree_node</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">right</span><span style=\"color: #666666\">,</span><span style=\"color: #DBD7CAEE\"> code </span><span style=\"color: #CB7676\">+</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">[</span><span style=\"color: #C98A7D99\">&#39;</span><span style=\"color: #C98A7D\">1</span><span style=\"color: #C98A7D99\">&#39;</span><span style=\"color: #666666\">])</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">    </span><span style=\"color: #4D9375\">else</span><span style=\"color: #666666\">:</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        huffman_codes</span><span style=\"color: #666666\">[</span><span style=\"color: #DBD7CAEE\">tree_node</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">data</span><span style=\"color: #666666\">]</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #666666\">=</span><span style=\"color: #DBD7CAEE\"> </span><span style=\"color: #C98A7D99\">&#39;&#39;</span><span style=\"color: #666666\">.</span><span style=\"color: #DBD7CAEE\">join</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">code</span><span style=\"color: #666666\">)</span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">        </span></span>\n<span class=\"line\"><span style=\"color: #DBD7CAEE\">traverse</span><span style=\"color: #666666\">(</span><span style=\"color: #DBD7CAEE\">huffman_tree</span><span style=\"color: #666666\">)</span></span></code></pre></div><div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DBD7CAEE\">huffman_codes</span></span></code></pre></div><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki vitesse-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #dbd7caee\">&#123;&#39;a&#39;: &#39;0000000&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #dbd7caee\"> &#39;b&#39;: &#39;0000001&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #dbd7caee\"> &#39;c&#39;: &#39;000001&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #dbd7caee\"> &#39;d&#39;: &#39;00001&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #dbd7caee\"> &#39;e&#39;: &#39;0001&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #dbd7caee\"> &#39;f&#39;: &#39;001&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #dbd7caee\"> &#39;g&#39;: &#39;01&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #dbd7caee\"> &#39;h&#39;: &#39;1&#39;&#125;</span></span></code></pre></div><p>当推广到n个字符频率恰好是前n个斐波那契数时，第1个字符的哈夫曼编码为n-1个‘0’，第1个字符的哈夫曼编码为n-2个‘0’+1个‘1’，第i个字符的哈夫曼编码为n-i-1个‘0’+1个‘1’。</p>\n","text":"课后练习13-1 首先计算斐波那契数列 python def fibonacci(n): if n == 0 or n == 1: return 1 retur...","permalink":"/post/算法设计与分析-课后练习13-1","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"基础","slug":"基础","count":35,"path":"api/categories/基础.json"},{"name":"作业","slug":"基础/作业","count":23,"path":"api/categories/基础/作业.json"},{"name":"算法","slug":"基础/作业/算法","count":23,"path":"api/categories/基础/作业/算法.json"}],"tags":[{"name":"作业","slug":"作业","count":26,"path":"api/tags/作业.json"},{"name":"算法","slug":"算法","count":25,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A013-1\"><span class=\"toc-text\">课后练习13-1</span></a></li></ol>","author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"算法设计与分析-课后练习12","uid":"ac8a4dc9a4a094a930f27a99be0c9864","slug":"算法设计与分析-课后练习12","date":"2023-11-21T02:03:57.000Z","updated":"2023-12-06T14:50:02.016Z","comments":true,"path":"api/articles/算法设计与分析-课后练习12.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/algo.png","text":"课后练习12 对作业排序问题的证明 根据定理4.3： 可知： 当是一个可行解时，必有一个作业执行序列使得所有作业按期执行 该作业执行序列中的作业依据降序排列 对...","permalink":"/post/算法设计与分析-课后练习12","photos":[],"count_time":{"symbolsCount":152,"symbolsTime":"1 mins."},"categories":[{"name":"基础","slug":"基础","count":35,"path":"api/categories/基础.json"},{"name":"作业","slug":"基础/作业","count":23,"path":"api/categories/基础/作业.json"},{"name":"算法","slug":"基础/作业/算法","count":23,"path":"api/categories/基础/作业/算法.json"}],"tags":[{"name":"作业","slug":"作业","count":26,"path":"api/tags/作业.json"},{"name":"算法","slug":"算法","count":25,"path":"api/tags/算法.json"}],"author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"算法设计与分析-课后练习13-2","uid":"9a15442a59869df6863553b2b6be7e68","slug":"算法设计与分析-课后练习13-2","date":"2023-11-21T02:00:42.000Z","updated":"2023-11-21T10:01:37.828Z","comments":true,"path":"api/articles/算法设计与分析-课后练习13-2.json","keywords":"记录, 学习, ClaRnS","cover":"/gallery/algo.png","text":"课后练习13-2 构建无向图： pythonimport networkx as nx import matplotlib.pyplot as plt grap...","permalink":"/post/算法设计与分析-课后练习13-2","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"基础","slug":"基础","count":35,"path":"api/categories/基础.json"},{"name":"作业","slug":"基础/作业","count":23,"path":"api/categories/基础/作业.json"},{"name":"算法","slug":"基础/作业/算法","count":23,"path":"api/categories/基础/作业/算法.json"}],"tags":[{"name":"作业","slug":"作业","count":26,"path":"api/tags/作业.json"},{"name":"算法","slug":"算法","count":25,"path":"api/tags/算法.json"}],"author":{"name":"ClaRn","slug":"blog-author","avatar":"/gallery/avatar.jpg","link":"/","description":"当你在浪费时间的事情里获得了快乐，那就不是在浪费时间。 ——罗素","socials":{"github":"https://github.com/iYIYiYIYi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}